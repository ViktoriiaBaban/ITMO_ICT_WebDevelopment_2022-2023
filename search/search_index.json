{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to ViktoriiaBaban \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0443 \"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\" \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043a\u0438 \u0433\u0440\u0443\u043f\u043f\u044b \u041a33412 \u0411\u0430\u0431\u0430\u043d \u0412\u0438\u043a\u0442\u043e\u0440\u0438\u0438 \u0421\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0430\u0431\u043e\u0442 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438. \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 django. \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 django rest. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API. \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 4. \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21164: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0434\u043d\u043e\u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043d\u043e\u0433\u043e \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (SPA) \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430 Vue.JS \u0421\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0440\u0430\u0431\u043e\u0442 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u043d\u044f\u0442\u0438\u0435 \u21163.1. Django Web framework. \u0417\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435.","title":"Home"},{"location":"#welcome-to-viktoriiababan","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0443 \"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\" \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043a\u0438 \u0433\u0440\u0443\u043f\u043f\u044b \u041a33412 \u0411\u0430\u0431\u0430\u043d \u0412\u0438\u043a\u0442\u043e\u0440\u0438\u0438","title":"Welcome to ViktoriiaBaban"},{"location":"#_1","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438. \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 django. \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 django rest. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API. \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 4. \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21164: \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0434\u043d\u043e\u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043d\u043e\u0433\u043e \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (SPA) \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430 Vue.JS","title":"\u0421\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0430\u0431\u043e\u0442"},{"location":"#_2","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u043d\u044f\u0442\u0438\u0435 \u21163.1. Django Web framework. \u0417\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435.","title":"\u0421\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0440\u0430\u0431\u043e\u0442"},{"location":"lab_1/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438 \u0417\u0430\u0434\u0430\u043d\u0438\u0435 1 server.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind(('', 9523)) sock.listen(10) conn, addr = sock.accept() print('connected with:', addr) while True: data = conn.recv(1024) print(data.decode(\"utf-8\")) if not data: break conn.send(b'Hello, client.\\n') conn.close() client.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect(('localhost', 9523)) sock.send(b'Hello, server.\\n') data = sock.recv(1024) print(data.decode(\"utf-8\")) sock.close() \u0417\u0430\u0434\u0430\u043d\u0438\u0435 2 \u0412\u0430\u0440\u0438\u0430\u043d\u0442: \u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 server.py import socket from math import sqrt sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind(('', 9523)) sock.listen(10) conn, addr = sock.accept() print('connected:', addr) while True: data = conn.recv(1024).decode() try: data = data.split(\" \") katet_1 = float(data[0]) katet_2 = float(data[1]) gipotenyza = float(data[2]) except: conn.sendall('\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445!\\n'.encode()) else: if katet_2 == 0: katet_2 = sqrt(gipotenyza**2 - katet_1**2) conn.sendall(f'\u0412\u0442\u043e\u0440\u043e\u0439 \u043a\u0430\u0442\u0435\u0442 \u0438\u043c\u0435\u0435\u0442 \u0434\u043b\u0438\u043d\u0443: {katet_2}\\n'.encode()) elif gipotenyza == 0: gipotenyza = sqrt(katet_1**2 + katet_2**2) conn.sendall(f'\u0413\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0430 \u0438\u043c\u0435\u0435\u0442 \u0434\u043b\u0438\u043d\u0443: {gipotenyza}\\n'.encode()) else: if gipotenyza == sqrt(katet_1**2 + katet_2**2): conn.sendall('\u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f. \u0412\u0441\u0451 \u0432\u0435\u0440\u043d\u043e, \u044d\u0442\u043e - \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u044b\u0439 \u0442\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a.'.encode()) else: conn.sendall('\u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f. \u0422\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a \u043d\u0435 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u044b\u0439!'.encode()) if not data: break conn.send(b'Hello, client.\\n') conn.close() client.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect(('localhost', 9523)) data = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0438\u0437 \u043a\u0430\u0442\u0435\u0442\u043e\u0432: \").replace(\" \", \"\") data += \" \" + input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0442\u0430, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0438\u043d\u0430\u0447\u0435 - \u0432\u0432\u0435\u0434\u0438\u0442\u0435 0: \").replace(\" \", \"\") data += \" \" + input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u044b, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0438\u043d\u0430\u0447\u0435 - \u0432\u0432\u0435\u0434\u0438\u0442\u0435 0: \").replace(\" \", \"\") sock.send(data.encode()) result = sock.recv(1024) print(result.decode(\"utf-8\")) sock.close() \u0417\u0430\u0434\u0430\u043d\u0438\u0435 3 server.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind(('', 9523)) sock.listen(10) conn, addr = sock.accept() print('connected with:', addr) with open('index.html') as f: page = f.read() response = 'HTTP/1.0 200 OK\\n\\n' + \"Content-Type: text/html\\n\\n\" + page conn.sendall(response.encode(\"utf-8\")) conn.close() client.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect(('localhost', 9523)) data = sock.recv(1024) print(data.decode(\"utf-8\")) sock.close() index.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>My page</title> </head> <body> <h1>Welcome, friend!</h1> </body> </html> \u0417\u0430\u0434\u0430\u043d\u0438\u0435 4 server.py import socket import threading def send_message(sock, msg): for client in clients: if sock != client: client.send(msg) def handle_client(socket, address, username): if not clients.setdefault(socket): clients[socket] = username print(f'{username}[{address[0]}:{address[1]}] \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043b\u0441\u044f \u043a \u0447\u0430\u0442\u0443') send_message(socket, f'\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c {username} \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043b\u0441\u044f \u043a \u0447\u0430\u0442\u0443'.encode()) while True: try: message = socket.recv(1024) if message.decode('utf-8').find('EXIT FROM CHAT') != -1: print(f'{username}[{address[0]}:{address[1]}] \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442') send_message(socket, f'\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c {username} \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442'.encode()) clients.pop(socket) break send_message(socket, message) except ConnectionResetError: print(f'{username}[{address[0]}:{address[1]}] \u043d\u0435\u043e\u0436\u0438\u0434\u0430\u043d\u043d\u043e \u043f\u0440\u043e\u043f\u0430\u043b...') send_message(socket, f'\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c {username} \u043d\u0435\u043e\u0436\u0438\u0434\u0430\u043d\u043d\u043e \u043f\u0440\u043e\u043f\u0430\u043b...'.encode()) break socket.close() sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind(('', 9523)) sock.listen(10) clients = {} while True: try: conn, addr = sock.accept() data = conn.recv(1024).decode('utf-8') t1 = threading.Thread(target=handle_client, args=(conn, addr, data)) t1.start() except KeyboardInterrupt: print('Server stopped') break conn.close() client.py import threading import socket import time def get_message(): while True: try: data = sock.recv(1024).decode('utf-8') print(data) except socket.error: time.sleep(0.5) continue def write_message(): while True: message = input() sock.sendto(('[' + name + '] ' + message).encode('utf-8'), server) if message == 'EXIT FROM CHAT': break sock.close() sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect(('localhost', 9523)) name = input('\u0412\u0432\u0435\u0434\u0438 \u0441\u0432\u043e\u0439 \u043d\u0438\u043a\u043d\u044d\u0439\u043c: ') print(f'\u041f\u0440\u0438\u0432\u0435\u0442, {name}! \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u0448\u044c \u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435.') print('\u0415\u0441\u043b\u0438 \u0437\u0430\u0445\u043e\u0447\u0435\u0448\u044c \u0432\u044b\u0439\u0442\u0438 \u0438\u0437 \u0447\u0430\u0442\u0430 \u043d\u0430\u043f\u0438\u0448\u0438 EXIT FROM CHAT\\n') server = '', 9523 sock.sendto((name).encode('utf-8'), server) thread_send = threading.Thread(target=write_message, args=()) thread_get = threading.Thread(target=get_message, args=()) thread_send.start() thread_get.start() \u0417\u0430\u0434\u0430\u043d\u0438\u0435 5 server.py import socket class MyHTTPServer: def __init__(self, host, port, name): self.host = host self.port = port self.name = name self.marks = [] def serve_forever(self): serve_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) serve_socket.bind((self.host, self.port)) serve_socket.listen(10) print('hi') while True: client_socket, address = serve_socket.accept() self.serve_client(client_socket) def serve_client(self, sock): data = sock.recv(4096).decode(\"utf-8\") request = self.parse_request(data) response = self.handle_request(request) sock.send(response.encode()) def parse_request(self, data): request_line = data.split('\\r\\n')[0] words = request_line.split() if len(words) == 3: try: par = data.split('\\r\\n')[-1] param = {} for p in par.split(\"&\"): param[p[:p.index('=')]] = p[p.index('=') + 1:] req = {\"method\": words[0], \"url\": words[1], \"version\": words[2], \"parametrs\": param} except: req = {\"method\": words[0], \"url\": words[1], \"version\": words[2], \"parametrs\": {}} else: raise Exception('Malformed request line') print(req) return req def parse_headers(self, data): lines = data.split('\\r\\n')[1:] headers = {} for line in lines: parts = line.split(': ') headers[parts[0]] = parts[1] return headers def handle_request(self, request): response = f\"{request['version']} 200 OK\\n\\n\" if request['method'] == 'GET' and request['url'] == \"/\": with open('index.html') as page: response += page.read() elif request['method'] == 'GET' and request['url'] == \"/view\": body = '<!DOCTYPE html>' \\ '<html lang=\"ru\">' \\ '<head>' \\ '<meta charset=\"UTF-8\">' \\ '<title>\u041e\u0446\u0435\u043d\u043a\u0438</title>' \\ '</head>' \\ '<body>' \\ '<table align=\"center\" width=\"20%\" border=\"1\">' for subject, mark in self.marks: body +=f\"<tr><td>{subject}</td><td>{mark}</td></tr>\" body += '</table></body></html>' response += body elif request['method'] == 'POST': self.marks.append((request['parametrs']['subject'], request['parametrs']['mark'])) return response if __name__ == '__main__': host = 'localhost' port = 9523 name = 'torry-site.ru' serv = MyHTTPServer(host, port, name) try: serv.serve_forever() except KeyboardInterrupt: pass index.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Marks</title> <script> function submitForm() { let http = new XMLHttpRequest(); http.open(\"POST\", \"http://127.0.0.1:9523/view\", true); http.setRequestHeader(\"Content\",\"text/html\"); let params = \"?mark=\" + document.getElementById(\"mark\").value + \"&subject=\" + document.getElementById(\"subject\").value; http.send(params); } </script> </head> <body> <form action=\"\" method=\"post\" align=\"center\" onsubmit=\"submitForm();\"> <br> <div> <label for=\"subject\">Subject:</label> <input type=\"text\" id=\"subject\" name=\"subject\"/> </div> <br> <div> <label for=\"mark\">Mark:</label> <input type=\"number\" id=\"mark\" name=\"mark\"/> </div> <br> <div> <input type=\"submit\"> </div> </form> </body> </html>","title":"\u041b\u0420 1"},{"location":"lab_1/#1","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438"},{"location":"lab_1/#1_1","text":"server.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind(('', 9523)) sock.listen(10) conn, addr = sock.accept() print('connected with:', addr) while True: data = conn.recv(1024) print(data.decode(\"utf-8\")) if not data: break conn.send(b'Hello, client.\\n') conn.close() client.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect(('localhost', 9523)) sock.send(b'Hello, server.\\n') data = sock.recv(1024) print(data.decode(\"utf-8\")) sock.close()","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"lab_1/#2","text":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442: \u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 server.py import socket from math import sqrt sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind(('', 9523)) sock.listen(10) conn, addr = sock.accept() print('connected:', addr) while True: data = conn.recv(1024).decode() try: data = data.split(\" \") katet_1 = float(data[0]) katet_2 = float(data[1]) gipotenyza = float(data[2]) except: conn.sendall('\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445!\\n'.encode()) else: if katet_2 == 0: katet_2 = sqrt(gipotenyza**2 - katet_1**2) conn.sendall(f'\u0412\u0442\u043e\u0440\u043e\u0439 \u043a\u0430\u0442\u0435\u0442 \u0438\u043c\u0435\u0435\u0442 \u0434\u043b\u0438\u043d\u0443: {katet_2}\\n'.encode()) elif gipotenyza == 0: gipotenyza = sqrt(katet_1**2 + katet_2**2) conn.sendall(f'\u0413\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0430 \u0438\u043c\u0435\u0435\u0442 \u0434\u043b\u0438\u043d\u0443: {gipotenyza}\\n'.encode()) else: if gipotenyza == sqrt(katet_1**2 + katet_2**2): conn.sendall('\u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f. \u0412\u0441\u0451 \u0432\u0435\u0440\u043d\u043e, \u044d\u0442\u043e - \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u044b\u0439 \u0442\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a.'.encode()) else: conn.sendall('\u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f. \u0422\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a \u043d\u0435 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u044b\u0439!'.encode()) if not data: break conn.send(b'Hello, client.\\n') conn.close() client.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect(('localhost', 9523)) data = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0438\u0437 \u043a\u0430\u0442\u0435\u0442\u043e\u0432: \").replace(\" \", \"\") data += \" \" + input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0442\u0430, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0438\u043d\u0430\u0447\u0435 - \u0432\u0432\u0435\u0434\u0438\u0442\u0435 0: \").replace(\" \", \"\") data += \" \" + input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u044b, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0438\u043d\u0430\u0447\u0435 - \u0432\u0432\u0435\u0434\u0438\u0442\u0435 0: \").replace(\" \", \"\") sock.send(data.encode()) result = sock.recv(1024) print(result.decode(\"utf-8\")) sock.close()","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"lab_1/#3","text":"server.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind(('', 9523)) sock.listen(10) conn, addr = sock.accept() print('connected with:', addr) with open('index.html') as f: page = f.read() response = 'HTTP/1.0 200 OK\\n\\n' + \"Content-Type: text/html\\n\\n\" + page conn.sendall(response.encode(\"utf-8\")) conn.close() client.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect(('localhost', 9523)) data = sock.recv(1024) print(data.decode(\"utf-8\")) sock.close() index.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>My page</title> </head> <body> <h1>Welcome, friend!</h1> </body> </html>","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3"},{"location":"lab_1/#4","text":"server.py import socket import threading def send_message(sock, msg): for client in clients: if sock != client: client.send(msg) def handle_client(socket, address, username): if not clients.setdefault(socket): clients[socket] = username print(f'{username}[{address[0]}:{address[1]}] \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043b\u0441\u044f \u043a \u0447\u0430\u0442\u0443') send_message(socket, f'\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c {username} \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043b\u0441\u044f \u043a \u0447\u0430\u0442\u0443'.encode()) while True: try: message = socket.recv(1024) if message.decode('utf-8').find('EXIT FROM CHAT') != -1: print(f'{username}[{address[0]}:{address[1]}] \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442') send_message(socket, f'\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c {username} \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442'.encode()) clients.pop(socket) break send_message(socket, message) except ConnectionResetError: print(f'{username}[{address[0]}:{address[1]}] \u043d\u0435\u043e\u0436\u0438\u0434\u0430\u043d\u043d\u043e \u043f\u0440\u043e\u043f\u0430\u043b...') send_message(socket, f'\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c {username} \u043d\u0435\u043e\u0436\u0438\u0434\u0430\u043d\u043d\u043e \u043f\u0440\u043e\u043f\u0430\u043b...'.encode()) break socket.close() sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind(('', 9523)) sock.listen(10) clients = {} while True: try: conn, addr = sock.accept() data = conn.recv(1024).decode('utf-8') t1 = threading.Thread(target=handle_client, args=(conn, addr, data)) t1.start() except KeyboardInterrupt: print('Server stopped') break conn.close() client.py import threading import socket import time def get_message(): while True: try: data = sock.recv(1024).decode('utf-8') print(data) except socket.error: time.sleep(0.5) continue def write_message(): while True: message = input() sock.sendto(('[' + name + '] ' + message).encode('utf-8'), server) if message == 'EXIT FROM CHAT': break sock.close() sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect(('localhost', 9523)) name = input('\u0412\u0432\u0435\u0434\u0438 \u0441\u0432\u043e\u0439 \u043d\u0438\u043a\u043d\u044d\u0439\u043c: ') print(f'\u041f\u0440\u0438\u0432\u0435\u0442, {name}! \u0422\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u0435\u0448\u044c \u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435.') print('\u0415\u0441\u043b\u0438 \u0437\u0430\u0445\u043e\u0447\u0435\u0448\u044c \u0432\u044b\u0439\u0442\u0438 \u0438\u0437 \u0447\u0430\u0442\u0430 \u043d\u0430\u043f\u0438\u0448\u0438 EXIT FROM CHAT\\n') server = '', 9523 sock.sendto((name).encode('utf-8'), server) thread_send = threading.Thread(target=write_message, args=()) thread_get = threading.Thread(target=get_message, args=()) thread_send.start() thread_get.start()","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4"},{"location":"lab_1/#5","text":"server.py import socket class MyHTTPServer: def __init__(self, host, port, name): self.host = host self.port = port self.name = name self.marks = [] def serve_forever(self): serve_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) serve_socket.bind((self.host, self.port)) serve_socket.listen(10) print('hi') while True: client_socket, address = serve_socket.accept() self.serve_client(client_socket) def serve_client(self, sock): data = sock.recv(4096).decode(\"utf-8\") request = self.parse_request(data) response = self.handle_request(request) sock.send(response.encode()) def parse_request(self, data): request_line = data.split('\\r\\n')[0] words = request_line.split() if len(words) == 3: try: par = data.split('\\r\\n')[-1] param = {} for p in par.split(\"&\"): param[p[:p.index('=')]] = p[p.index('=') + 1:] req = {\"method\": words[0], \"url\": words[1], \"version\": words[2], \"parametrs\": param} except: req = {\"method\": words[0], \"url\": words[1], \"version\": words[2], \"parametrs\": {}} else: raise Exception('Malformed request line') print(req) return req def parse_headers(self, data): lines = data.split('\\r\\n')[1:] headers = {} for line in lines: parts = line.split(': ') headers[parts[0]] = parts[1] return headers def handle_request(self, request): response = f\"{request['version']} 200 OK\\n\\n\" if request['method'] == 'GET' and request['url'] == \"/\": with open('index.html') as page: response += page.read() elif request['method'] == 'GET' and request['url'] == \"/view\": body = '<!DOCTYPE html>' \\ '<html lang=\"ru\">' \\ '<head>' \\ '<meta charset=\"UTF-8\">' \\ '<title>\u041e\u0446\u0435\u043d\u043a\u0438</title>' \\ '</head>' \\ '<body>' \\ '<table align=\"center\" width=\"20%\" border=\"1\">' for subject, mark in self.marks: body +=f\"<tr><td>{subject}</td><td>{mark}</td></tr>\" body += '</table></body></html>' response += body elif request['method'] == 'POST': self.marks.append((request['parametrs']['subject'], request['parametrs']['mark'])) return response if __name__ == '__main__': host = 'localhost' port = 9523 name = 'torry-site.ru' serv = MyHTTPServer(host, port, name) try: serv.serve_forever() except KeyboardInterrupt: pass index.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Marks</title> <script> function submitForm() { let http = new XMLHttpRequest(); http.open(\"POST\", \"http://127.0.0.1:9523/view\", true); http.setRequestHeader(\"Content\",\"text/html\"); let params = \"?mark=\" + document.getElementById(\"mark\").value + \"&subject=\" + document.getElementById(\"subject\").value; http.send(params); } </script> </head> <body> <form action=\"\" method=\"post\" align=\"center\" onsubmit=\"submitForm();\"> <br> <div> <label for=\"subject\">Subject:</label> <input type=\"text\" id=\"subject\" name=\"subject\"/> </div> <br> <div> <label for=\"mark\">Mark:</label> <input type=\"number\" id=\"mark\" name=\"mark\"/> </div> <br> <div> <input type=\"submit\"> </div> </form> </body> </html>","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5"},{"location":"lab_2/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2 \u0412\u0430\u0440\u0438\u0430\u043d\u0442 \"\u041e\u0442\u0435\u043b\u0438\" models.py from django.core.validators import MinValueValidator, MaxValueValidator from django.core.exceptions import ValidationError from django.db import models class Hotel(models.Model): name = models.CharField(\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0435\u043b\u044f\", max_length=50, primary_key=True) owner = models.CharField(\"\u0412\u043b\u0430\u0434\u0435\u043b\u0435\u0446 \u043e\u0442\u0435\u043b\u044f\", max_length=50) address = models.CharField(\"\u0410\u0434\u0440\u0435\u0441 \u043e\u0442\u0435\u043b\u044f\", max_length=100) class Room(models.Model): TYPE_ROOM = [ ('S', '\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442'), ('\u0421', '\u041a\u043e\u043c\u0444\u043e\u0440\u0442'), ('L', '\u041b\u044e\u043a\u0441'), ('F', '\u0421\u0435\u043c\u0435\u0439\u043d\u044b\u0439'), ('P', '\u041f\u0440\u0435\u0437\u0438\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0439'), ('A', '\u0410\u043f\u0430\u0440\u0442\u0430\u043c\u0435\u043d\u0442\u044b') ] hotel = models.ForeignKey(Hotel, on_delete=models.CASCADE, verbose_name=\"\u041e\u0442\u0435\u043b\u044c\") number = models.IntegerField(\"\u041d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b\") description = models.CharField(\"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u0430\", max_length=1000) type_room = models.CharField(\"\u0422\u0438\u043f \u043d\u043e\u043c\u0435\u0440\u0430\", max_length=1, choices=TYPE_ROOM) beds = models.PositiveSmallIntegerField(\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u0430\u043b\u044c\u043d\u044b\u0445 \u043c\u0435\u0441\u0442\", validators=[MinValueValidator(1)]) price = models.PositiveIntegerField(\"\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043d\u043e\u043c\u0435\u0440\u0430\") class Meta: # One hotel can't have two rooms with the same number unique_together = ('hotel', 'number') class Guest(models.Model): last_name = models.CharField(\"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\", max_length=30, null=False) first_name = models.CharField(\"\u0418\u043c\u044f\", max_length=30, null=False) passport = models.CharField(\"\u041d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430\", primary_key=True, max_length=30) class Booking(models.Model): hotel = models.ForeignKey(Hotel, on_delete=models.CASCADE, verbose_name=\"\u041e\u0442\u0435\u043b\u044c\") room = models.ForeignKey(Room, on_delete=models.CASCADE) guest = models.ForeignKey(Guest, on_delete=models.CASCADE) date_start = models.DateField(\"\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430\") date_end = models.DateField(\"\u0414\u0430\u0442\u0430 \u0432\u044b\u0435\u0437\u0434\u0430\") total_price = models.PositiveIntegerField(\"\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f\", null=False) @property def days(self): return (self.date_end - self.date_start).days def check_date(self): if self.date_start >= self.date_end: raise ValidationError(\"\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0439!\") def save(self, *args, **kwargs): self.total_price = self.room.price * self.days super(Booking, self).save(*args, **kwargs) class Feedback(models.Model): booking = models.ForeignKey(Booking, on_delete=models.CASCADE, verbose_name=\"\u041a\u043e\u0434 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\") author = models.CharField(\"\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0432\u0430\u0448 \u043d\u0438\u043a\", max_length=30) rate = models.IntegerField(\"\u041e\u0446\u0435\u043d\u043a\u0430\", default=0, validators=[MaxValueValidator(10), MinValueValidator(1)]) date_start = models.DateField(\"\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430\") date_end = models.DateField(\"\u0414\u0430\u0442\u0430 \u0432\u044b\u0435\u0437\u0434\u0430\") text = models.TextField(\"\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439\", null=False) def save(self, *args, **kwargs): self.date_start = self.booking.date_start self.date_end = self.booking.date_end super(Feedback, self).save(*args, **kwargs) urls.py from django.contrib import admin from django.urls import path from hotels.views import * urlpatterns = [ path(\"admin/\", admin.site.urls), path('main/', main_page, name='main_page'), path(\"guests/add/\", AddGuests.as_view(), name='add_guest'), path('guests/<str:hotel_name>', guests_list), path(\"rooms/\", ListRooms.as_view(), name='rooms'), path(\"bookings/create\", CreateBooking.as_view(), name='add_booking'), path(\"bookings/my/\", MyBookings, name='my_bookings'), path(\"bookings/<int:guest_passport>/\", UserBookings), path(\"bookings/update/<int:pk>\", UpdateBooking.as_view()), path(\"bookings/delete/<int:pk>\", DeleteBooking.as_view()), path(\"feedbacks/add/\", AddFeedback, name='give_feedback'), path('feedbacks/',AllFeedbacks, name='all_feedbacks'), path('hotel/', get_hotel, name='hotel'), ] forms.py from django import forms from hotels.models import Feedback class CreateFeedback(forms.ModelForm): class Meta: model = Feedback fields = ['booking', 'author', 'text', 'rate'] admin.py from django.contrib import admin from hotels.models import * admin.site.register(Booking) admin.site.register(Hotel) admin.site.register(Guest) admin.site.register(Feedback) admin.site.register(Room) views.py from django.shortcuts import render, redirect from django.http import Http404 from hotels.models import Hotel, Booking, Room, Guest, Feedback from django.views.generic import ListView, UpdateView, CreateView, DeleteView from hotels.forms import CreateFeedback # \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 def main_page(request): return render(request, 'main_page.html') # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f class AddGuests(CreateView): model = Guest fields = [ \"last_name\", \"first_name\", \"passport\", ] template_name = \"add_guest.html\" success_url = \"/main/\" # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u043d\u043e\u043c\u0435\u0440\u043e\u0432 class ListRooms(ListView): model = Room template_name = 'list_rooms.html' # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f class CreateBooking(CreateView): model = Booking fields = [ 'hotel', 'room', 'guest', 'date_start', 'date_end' ] template_name = 'create_booking.html' success_url = '/bookings/my/' # \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f class UpdateBooking(UpdateView): model = Booking fields = ['room', 'date_start', 'date_end'] template_name = 'update_booking.html' success_url = '/bookings/my/' # \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f class DeleteBooking(DeleteView): model = Booking template_name = 'delete_booking.html' success_url = '/bookings/my/' # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f def UserBookings(request, guest_passport): need_book = Booking.objects.filter(guest=guest_passport) current_book = {\"object_list\": need_book} return render(request, 'users_bookings.html', current_book) # \u043e\u0442\u0431\u043e\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 def MyBookings(request): try: passport = int(request.POST.get('passport_user')) return redirect(f\"/bookings/{passport}/\") except: return render(request, \"my_bookings.html\") # \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 def AddFeedback(request): data = {} form = CreateFeedback(request.POST) if form.is_valid(): form.save() data['form'] = form return render(request, 'give_feedback.html', data) # \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 def AllFeedbacks(request): list_comments = {\"object_list\": Feedback.objects.all()} return render(request, 'all_feedbacks.html', list_comments) # \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0433\u043e\u0441\u0442\u0435\u0439 \u043e\u0442\u0435\u043b\u044f def get_hotel(request): hotel = request.POST.get('hotel_name') if hotel: return redirect(f\"/guests/{hotel}\") else: return render(request, 'hotel.html') def guests_list(request, hotel_name): guest_in_hotel = Booking.objects.filter(hotel=hotel_name).values_list('guest') nedeed_guests = Guest.objects.filter(passport__in=guest_in_hotel) list_of_guests = { \"object_list\": nedeed_guests, \"hotel_name\": hotel_name} return render(request, 'guests.html', list_of_guests) HTML-\u043a\u043e\u0434 \u0441\u0442\u0440\u0430\u043d\u0438\u0446 main_page.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>Main</title> </head> <body> <div class = 'd-flex align-items-center flex-column'> <h1> \u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0435\u043b\u0435\u0439, \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0438 \u0433\u043e\u0441\u0442\u0435\u0439 </h1> </div> <main class=\"container p-5\"> <div class=\"row p-1\"> <div class=\"col-sm-4\"> <div class=\"card bg-success text-center\"> <div class=\"card-body\"> <a href=\"{% url 'add_guest' %}\" class=\"btn btn-outline-light \">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0433\u043e\u0441\u0442\u044f</a> </div> </div> </div> <div class=\"col-sm-4\"> <div class=\"card bg-danger text-center\"> <div class=\"card-body\"> <a href=\"{% url 'add_booking' %}\" class=\"btn btn-outline-light\">\u0417\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c</a> </div> </div> </div> <div class=\"col-sm-4\"> <div class=\"card bg-success text-center\"> <div class=\"card-body\"> <a href=\"{% url 'my_bookings' %}\" class=\"btn btn-outline-light\">\u041c\u043e\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</a> </div> </div> </div> </div> <div class=\"row p-1\"> <div class=\"col-sm-4\"> <div class=\"card bg-danger text-center\"> <div class=\"card-body\"> <a href=\"{% url 'rooms' %}\" class=\"btn btn-outline-light\">\u041a\u043e\u043c\u043d\u0430\u0442\u044b</a> </div> </div> </div> <div class=\"col-sm-4\"> <div class=\"card bg-success text-center\"> <div class=\"card-body\"> <a href=\"{% url 'all_feedbacks' %}\" class=\"btn btn-outline-light\">\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043e\u0442\u0437\u044b\u0432\u044b</a> </div> </div> </div> <div class=\"col-sm-4\"> <div class=\"card bg-danger text-center\"> <div class=\"card-body\"> <a href=\"{% url 'give_feedback' %}\" class=\"btn btn-outline-light\">\u041e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0442\u0437\u044b\u0432</a> </div> </div> </div> </div> <div class=\"row p-1 \"> <div class=\"col-sm-4\"> <div class=\"card bg-success text-center\"> <div class=\"card-body\"> <a href=\"{% url 'hotel' %}\" class=\"btn btn-outline-light\">\u041a\u043b\u0438\u0435\u043d\u0442\u044b \u043e\u0442\u0435\u043b\u044f</a> </div> </div> </div> <div class=\"col-sm-4\"> <div class=\"card bg-danger text-center\"> <div class=\"card-body\"> <a href=\"/admin/\" class=\"btn btn-outline-light\">\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440</a> </div> </div> </div> </div> </main> </body> </html> add_guest.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>New guest</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h2 class=\"mt-2\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0433\u043e\u0441\u0442\u044f</h2> <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <div class=\"d-grid gap-2 d-md-flex justify-content-md-center\"> <button type=\"submit\" class=\"btn btn-success g-5 \">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c</button> </div> </form> </div> </div> </div> </body> </html> all_feedbacks.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>All feedbacks</title> </head> <body> <table class=\"table table-hover table-bordered\"> <thead class=\"table-success\"> <tr> <th scope=\"col\">\u041e\u0442\u0435\u043b\u044c</th> <th scope=\"col\">\u041d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b</th> <th scope=\"col\">\u0410\u0432\u0442\u043e\u0440</th> <th scope=\"col\">\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430</th> <th scope=\"col\">\u0414\u0430\u0442\u0430 \u0432\u044b\u0435\u0437\u0434\u0430</th> <th scope=\"col\">\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439</th> </tr> </thead> {% for feedback in object_list %} <tbody> <tr> <td>{{ feedback.booking.room.hotel.name }}</td> <td>{{ feedback.booking.room.number }}</td> <td>{{ feedback.author }}</td> <td>{{ feedback.date_start }}</td> <td>{{ feedback.date_end }}</td> <td>{{ feedback.text }}</td> </tr> </tbody> {% endfor %} </table> </body> </html> create_booking.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>Create booking</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h1 class=\"mt-2\">\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u043d\u0430\u0442\u044b</h1> <hr class=\"mt-0 mb-4\"> <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\"> <button type=\"submit\" class=\"btn btn-success g-5\">\u0421\u043e\u0437\u0434\u0430\u0442\u044c</button> </div> </form> </div> </div> </div> </body> </html> delete_booking.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>Delete your booking</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h2 class=\"mt-2\">\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</h2> <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} <div> <p class = \"d-flex justify-content-end\"></p>\u0412\u044b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \"{{ object }}\"?</p> </div> <div> <input type=\"submit\" value=\"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c\" class=\"btn btn-danger p-2 \"></input> </div> </form> </div> </div> </div> </body> </html> give_feedback.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>Give your feedback!</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h2 class=\"mt-2\">\u041e\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u0441\u0432\u043e\u0439 \u043e\u0442\u0437\u044b\u0432</h2> <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\"> <button type=\"submit\" class=\"btn btn-success g-5\">\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c</button> </div> </form> </div> </div> </div> </body> </html> guests.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>All guests</title> </head> <body> <h2 class=\"d-flex justify-content-center\"> \u0413\u043e\u0441\u0442\u0438 \u043e\u0442\u0435\u043b\u044f {{ hotel_name }}</h2> <table class=\"table table-hover table-bordered\"> <thead class=\"table-success table-hover\"> <tr> <th scope=\"col\">\u0424\u0430\u043c\u0438\u043b\u0438\u044f</th> <th scope=\"col\">\u0418\u043c\u044f</th> </tr> </thead> {% for guest in object_list %} <tbody> <tr> <td>{{ guest.last_name }}</td> <td>{{ guest.first_name }}</td> </tr> </tbody> {% endfor %} </table> </body> </html> hotel.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>Hotel</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h2 class=\"mt-2\">\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0435\u043b\u044f:</h2> <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <div class=\"d-flex p-2 flex-column \"> <input type=\"text\" name=\"hotel_name\"> </div> <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\"> <button type=\"submit\" class=\"btn btn-success g-5\">\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c</button> </div> </form> </div> </div> </div> </body> </html> list_rooms.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>\u041d\u043e\u043c\u0435\u0440\u0430 \u0432 \u043e\u0442\u0435\u043b\u0435</title> </head> <body> <table class=\"table table-hover table-bordered\"> <thead class=\"table-success\"> <tr> <th scope=\"col\">\u041e\u0442\u0435\u043b\u044c</th> <th scope=\"col\">\u041d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b</th> <th scope=\"col\">\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u0430</th> <th scope=\"col\">\u0422\u0438\u043f \u043d\u043e\u043c\u0435\u0440\u0430</th> <th scope=\"col\">\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u0430\u043b\u044c\u043d\u044b\u0445 \u043c\u0435\u0441\u0442</th> <th scope=\"col\">\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043d\u043e\u043c\u0435\u0440\u0430 \u0437\u0430 \u043d\u043e\u0447\u044c</th> </tr> </thead> {% for room in object_list %} <tbody> <tr> <td>{{ room.hotel.name }}</td> <td>{{ room.number }}</td> <td>{{ room.description}}</td> <td>{{ room.type_room}}</td> <td>{{ room.beds }}</td> <td>{{ room.price}}</td> </tr> </tbody> {% endfor %} </table> </body> </html> my_bookings.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>My bookings</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h2 class=\"mt-2\">\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430:</h2> <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <div class=\"d-flex p-2 flex-column \"> <input type=\"text\" name=\"passport_user\"> </div> <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\"> <button type=\"submit\" class=\"btn btn-success g-5\">\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c</button> </div> </form> </div> </div> </div> </body> </html> update_booking.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>Update your booking</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h2 class=\"mt-2\">\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</h2> {% block content %} <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\"> <button type=\"submit\" class=\"btn btn-success g-5\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> </div> </form> {% endblock %} </div> </div> </div> </body> </html> users_bookings.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>All bookings</title> </head> <body> <table class=\"table table-striped table-bordered table-hover\"> <thead class=\"table-success\"> <tr> <th scope=\"col\">\u041d\u043e\u043c\u0435\u0440 \u0437\u0430\u043a\u0430\u0437\u0430</th> <th scope=\"col\">\u041e\u0442\u0435\u043b\u044c</th> <th scope=\"col\">\u041d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b</th> <th scope=\"col\">\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430</th> <th scope=\"col\">\u0414\u0430\u0442\u0430 \u0432\u044b\u0435\u0437\u0434\u0430</th> <th scope=\"col\">\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c</th> <th scope=\"col\">\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438</th> </tr> </thead> {% for booking in object_list %} <tbody> <tr> <td>{{ booking.id }}</td> <td>{{ booking.room.hotel.name }}</td> <td>{{ booking.room.number }}</td> <td>{{ booking.date_start }}</td> <td>{{ booking.date_end}}</td> <td>{{ booking.total_price }}</td> <td class=\"d-flex justify-content-start gap-2\"> <a href=\"/bookings/update/{{ booking.id }}\"> <button type=\"button\" class=\"btn btn-outline-primary\">\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c</button> </a> <a href=\"/bookings/delete/{{ booking.id }}\"> <button type=\"button\" class=\"btn btn-outline-danger\">\u0423\u0434\u0430\u043b\u0438\u0442\u044c</button> </a> </td> </tr> </tbody> {% endfor %} </table> </body> </html>","title":"\u041b\u0420 2"},{"location":"lab_2/#2","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2"},{"location":"lab_2/#_1","text":"models.py from django.core.validators import MinValueValidator, MaxValueValidator from django.core.exceptions import ValidationError from django.db import models class Hotel(models.Model): name = models.CharField(\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0435\u043b\u044f\", max_length=50, primary_key=True) owner = models.CharField(\"\u0412\u043b\u0430\u0434\u0435\u043b\u0435\u0446 \u043e\u0442\u0435\u043b\u044f\", max_length=50) address = models.CharField(\"\u0410\u0434\u0440\u0435\u0441 \u043e\u0442\u0435\u043b\u044f\", max_length=100) class Room(models.Model): TYPE_ROOM = [ ('S', '\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442'), ('\u0421', '\u041a\u043e\u043c\u0444\u043e\u0440\u0442'), ('L', '\u041b\u044e\u043a\u0441'), ('F', '\u0421\u0435\u043c\u0435\u0439\u043d\u044b\u0439'), ('P', '\u041f\u0440\u0435\u0437\u0438\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0439'), ('A', '\u0410\u043f\u0430\u0440\u0442\u0430\u043c\u0435\u043d\u0442\u044b') ] hotel = models.ForeignKey(Hotel, on_delete=models.CASCADE, verbose_name=\"\u041e\u0442\u0435\u043b\u044c\") number = models.IntegerField(\"\u041d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b\") description = models.CharField(\"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u0430\", max_length=1000) type_room = models.CharField(\"\u0422\u0438\u043f \u043d\u043e\u043c\u0435\u0440\u0430\", max_length=1, choices=TYPE_ROOM) beds = models.PositiveSmallIntegerField(\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u0430\u043b\u044c\u043d\u044b\u0445 \u043c\u0435\u0441\u0442\", validators=[MinValueValidator(1)]) price = models.PositiveIntegerField(\"\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043d\u043e\u043c\u0435\u0440\u0430\") class Meta: # One hotel can't have two rooms with the same number unique_together = ('hotel', 'number') class Guest(models.Model): last_name = models.CharField(\"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\", max_length=30, null=False) first_name = models.CharField(\"\u0418\u043c\u044f\", max_length=30, null=False) passport = models.CharField(\"\u041d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430\", primary_key=True, max_length=30) class Booking(models.Model): hotel = models.ForeignKey(Hotel, on_delete=models.CASCADE, verbose_name=\"\u041e\u0442\u0435\u043b\u044c\") room = models.ForeignKey(Room, on_delete=models.CASCADE) guest = models.ForeignKey(Guest, on_delete=models.CASCADE) date_start = models.DateField(\"\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430\") date_end = models.DateField(\"\u0414\u0430\u0442\u0430 \u0432\u044b\u0435\u0437\u0434\u0430\") total_price = models.PositiveIntegerField(\"\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f\", null=False) @property def days(self): return (self.date_end - self.date_start).days def check_date(self): if self.date_start >= self.date_end: raise ValidationError(\"\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0439!\") def save(self, *args, **kwargs): self.total_price = self.room.price * self.days super(Booking, self).save(*args, **kwargs) class Feedback(models.Model): booking = models.ForeignKey(Booking, on_delete=models.CASCADE, verbose_name=\"\u041a\u043e\u0434 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\") author = models.CharField(\"\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0432\u0430\u0448 \u043d\u0438\u043a\", max_length=30) rate = models.IntegerField(\"\u041e\u0446\u0435\u043d\u043a\u0430\", default=0, validators=[MaxValueValidator(10), MinValueValidator(1)]) date_start = models.DateField(\"\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430\") date_end = models.DateField(\"\u0414\u0430\u0442\u0430 \u0432\u044b\u0435\u0437\u0434\u0430\") text = models.TextField(\"\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439\", null=False) def save(self, *args, **kwargs): self.date_start = self.booking.date_start self.date_end = self.booking.date_end super(Feedback, self).save(*args, **kwargs) urls.py from django.contrib import admin from django.urls import path from hotels.views import * urlpatterns = [ path(\"admin/\", admin.site.urls), path('main/', main_page, name='main_page'), path(\"guests/add/\", AddGuests.as_view(), name='add_guest'), path('guests/<str:hotel_name>', guests_list), path(\"rooms/\", ListRooms.as_view(), name='rooms'), path(\"bookings/create\", CreateBooking.as_view(), name='add_booking'), path(\"bookings/my/\", MyBookings, name='my_bookings'), path(\"bookings/<int:guest_passport>/\", UserBookings), path(\"bookings/update/<int:pk>\", UpdateBooking.as_view()), path(\"bookings/delete/<int:pk>\", DeleteBooking.as_view()), path(\"feedbacks/add/\", AddFeedback, name='give_feedback'), path('feedbacks/',AllFeedbacks, name='all_feedbacks'), path('hotel/', get_hotel, name='hotel'), ] forms.py from django import forms from hotels.models import Feedback class CreateFeedback(forms.ModelForm): class Meta: model = Feedback fields = ['booking', 'author', 'text', 'rate'] admin.py from django.contrib import admin from hotels.models import * admin.site.register(Booking) admin.site.register(Hotel) admin.site.register(Guest) admin.site.register(Feedback) admin.site.register(Room) views.py from django.shortcuts import render, redirect from django.http import Http404 from hotels.models import Hotel, Booking, Room, Guest, Feedback from django.views.generic import ListView, UpdateView, CreateView, DeleteView from hotels.forms import CreateFeedback # \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 def main_page(request): return render(request, 'main_page.html') # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f class AddGuests(CreateView): model = Guest fields = [ \"last_name\", \"first_name\", \"passport\", ] template_name = \"add_guest.html\" success_url = \"/main/\" # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u043d\u043e\u043c\u0435\u0440\u043e\u0432 class ListRooms(ListView): model = Room template_name = 'list_rooms.html' # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f class CreateBooking(CreateView): model = Booking fields = [ 'hotel', 'room', 'guest', 'date_start', 'date_end' ] template_name = 'create_booking.html' success_url = '/bookings/my/' # \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f class UpdateBooking(UpdateView): model = Booking fields = ['room', 'date_start', 'date_end'] template_name = 'update_booking.html' success_url = '/bookings/my/' # \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f class DeleteBooking(DeleteView): model = Booking template_name = 'delete_booking.html' success_url = '/bookings/my/' # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f def UserBookings(request, guest_passport): need_book = Booking.objects.filter(guest=guest_passport) current_book = {\"object_list\": need_book} return render(request, 'users_bookings.html', current_book) # \u043e\u0442\u0431\u043e\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 def MyBookings(request): try: passport = int(request.POST.get('passport_user')) return redirect(f\"/bookings/{passport}/\") except: return render(request, \"my_bookings.html\") # \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 def AddFeedback(request): data = {} form = CreateFeedback(request.POST) if form.is_valid(): form.save() data['form'] = form return render(request, 'give_feedback.html', data) # \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 def AllFeedbacks(request): list_comments = {\"object_list\": Feedback.objects.all()} return render(request, 'all_feedbacks.html', list_comments) # \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0433\u043e\u0441\u0442\u0435\u0439 \u043e\u0442\u0435\u043b\u044f def get_hotel(request): hotel = request.POST.get('hotel_name') if hotel: return redirect(f\"/guests/{hotel}\") else: return render(request, 'hotel.html') def guests_list(request, hotel_name): guest_in_hotel = Booking.objects.filter(hotel=hotel_name).values_list('guest') nedeed_guests = Guest.objects.filter(passport__in=guest_in_hotel) list_of_guests = { \"object_list\": nedeed_guests, \"hotel_name\": hotel_name} return render(request, 'guests.html', list_of_guests)","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 \"\u041e\u0442\u0435\u043b\u0438\""},{"location":"lab_2/#html-","text":"main_page.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>Main</title> </head> <body> <div class = 'd-flex align-items-center flex-column'> <h1> \u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0435\u043b\u0435\u0439, \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u0438 \u0433\u043e\u0441\u0442\u0435\u0439 </h1> </div> <main class=\"container p-5\"> <div class=\"row p-1\"> <div class=\"col-sm-4\"> <div class=\"card bg-success text-center\"> <div class=\"card-body\"> <a href=\"{% url 'add_guest' %}\" class=\"btn btn-outline-light \">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0433\u043e\u0441\u0442\u044f</a> </div> </div> </div> <div class=\"col-sm-4\"> <div class=\"card bg-danger text-center\"> <div class=\"card-body\"> <a href=\"{% url 'add_booking' %}\" class=\"btn btn-outline-light\">\u0417\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c</a> </div> </div> </div> <div class=\"col-sm-4\"> <div class=\"card bg-success text-center\"> <div class=\"card-body\"> <a href=\"{% url 'my_bookings' %}\" class=\"btn btn-outline-light\">\u041c\u043e\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</a> </div> </div> </div> </div> <div class=\"row p-1\"> <div class=\"col-sm-4\"> <div class=\"card bg-danger text-center\"> <div class=\"card-body\"> <a href=\"{% url 'rooms' %}\" class=\"btn btn-outline-light\">\u041a\u043e\u043c\u043d\u0430\u0442\u044b</a> </div> </div> </div> <div class=\"col-sm-4\"> <div class=\"card bg-success text-center\"> <div class=\"card-body\"> <a href=\"{% url 'all_feedbacks' %}\" class=\"btn btn-outline-light\">\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043e\u0442\u0437\u044b\u0432\u044b</a> </div> </div> </div> <div class=\"col-sm-4\"> <div class=\"card bg-danger text-center\"> <div class=\"card-body\"> <a href=\"{% url 'give_feedback' %}\" class=\"btn btn-outline-light\">\u041e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0442\u0437\u044b\u0432</a> </div> </div> </div> </div> <div class=\"row p-1 \"> <div class=\"col-sm-4\"> <div class=\"card bg-success text-center\"> <div class=\"card-body\"> <a href=\"{% url 'hotel' %}\" class=\"btn btn-outline-light\">\u041a\u043b\u0438\u0435\u043d\u0442\u044b \u043e\u0442\u0435\u043b\u044f</a> </div> </div> </div> <div class=\"col-sm-4\"> <div class=\"card bg-danger text-center\"> <div class=\"card-body\"> <a href=\"/admin/\" class=\"btn btn-outline-light\">\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440</a> </div> </div> </div> </div> </main> </body> </html> add_guest.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>New guest</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h2 class=\"mt-2\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0433\u043e\u0441\u0442\u044f</h2> <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <div class=\"d-grid gap-2 d-md-flex justify-content-md-center\"> <button type=\"submit\" class=\"btn btn-success g-5 \">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c</button> </div> </form> </div> </div> </div> </body> </html> all_feedbacks.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>All feedbacks</title> </head> <body> <table class=\"table table-hover table-bordered\"> <thead class=\"table-success\"> <tr> <th scope=\"col\">\u041e\u0442\u0435\u043b\u044c</th> <th scope=\"col\">\u041d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b</th> <th scope=\"col\">\u0410\u0432\u0442\u043e\u0440</th> <th scope=\"col\">\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430</th> <th scope=\"col\">\u0414\u0430\u0442\u0430 \u0432\u044b\u0435\u0437\u0434\u0430</th> <th scope=\"col\">\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439</th> </tr> </thead> {% for feedback in object_list %} <tbody> <tr> <td>{{ feedback.booking.room.hotel.name }}</td> <td>{{ feedback.booking.room.number }}</td> <td>{{ feedback.author }}</td> <td>{{ feedback.date_start }}</td> <td>{{ feedback.date_end }}</td> <td>{{ feedback.text }}</td> </tr> </tbody> {% endfor %} </table> </body> </html> create_booking.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>Create booking</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h1 class=\"mt-2\">\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u043d\u0430\u0442\u044b</h1> <hr class=\"mt-0 mb-4\"> <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\"> <button type=\"submit\" class=\"btn btn-success g-5\">\u0421\u043e\u0437\u0434\u0430\u0442\u044c</button> </div> </form> </div> </div> </div> </body> </html> delete_booking.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>Delete your booking</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h2 class=\"mt-2\">\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</h2> <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} <div> <p class = \"d-flex justify-content-end\"></p>\u0412\u044b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \"{{ object }}\"?</p> </div> <div> <input type=\"submit\" value=\"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c\" class=\"btn btn-danger p-2 \"></input> </div> </form> </div> </div> </div> </body> </html> give_feedback.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>Give your feedback!</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h2 class=\"mt-2\">\u041e\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u0441\u0432\u043e\u0439 \u043e\u0442\u0437\u044b\u0432</h2> <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\"> <button type=\"submit\" class=\"btn btn-success g-5\">\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c</button> </div> </form> </div> </div> </div> </body> </html> guests.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>All guests</title> </head> <body> <h2 class=\"d-flex justify-content-center\"> \u0413\u043e\u0441\u0442\u0438 \u043e\u0442\u0435\u043b\u044f {{ hotel_name }}</h2> <table class=\"table table-hover table-bordered\"> <thead class=\"table-success table-hover\"> <tr> <th scope=\"col\">\u0424\u0430\u043c\u0438\u043b\u0438\u044f</th> <th scope=\"col\">\u0418\u043c\u044f</th> </tr> </thead> {% for guest in object_list %} <tbody> <tr> <td>{{ guest.last_name }}</td> <td>{{ guest.first_name }}</td> </tr> </tbody> {% endfor %} </table> </body> </html> hotel.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>Hotel</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h2 class=\"mt-2\">\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0435\u043b\u044f:</h2> <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <div class=\"d-flex p-2 flex-column \"> <input type=\"text\" name=\"hotel_name\"> </div> <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\"> <button type=\"submit\" class=\"btn btn-success g-5\">\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c</button> </div> </form> </div> </div> </div> </body> </html> list_rooms.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>\u041d\u043e\u043c\u0435\u0440\u0430 \u0432 \u043e\u0442\u0435\u043b\u0435</title> </head> <body> <table class=\"table table-hover table-bordered\"> <thead class=\"table-success\"> <tr> <th scope=\"col\">\u041e\u0442\u0435\u043b\u044c</th> <th scope=\"col\">\u041d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b</th> <th scope=\"col\">\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u0430</th> <th scope=\"col\">\u0422\u0438\u043f \u043d\u043e\u043c\u0435\u0440\u0430</th> <th scope=\"col\">\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u0430\u043b\u044c\u043d\u044b\u0445 \u043c\u0435\u0441\u0442</th> <th scope=\"col\">\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043d\u043e\u043c\u0435\u0440\u0430 \u0437\u0430 \u043d\u043e\u0447\u044c</th> </tr> </thead> {% for room in object_list %} <tbody> <tr> <td>{{ room.hotel.name }}</td> <td>{{ room.number }}</td> <td>{{ room.description}}</td> <td>{{ room.type_room}}</td> <td>{{ room.beds }}</td> <td>{{ room.price}}</td> </tr> </tbody> {% endfor %} </table> </body> </html> my_bookings.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>My bookings</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h2 class=\"mt-2\">\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430:</h2> <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <div class=\"d-flex p-2 flex-column \"> <input type=\"text\" name=\"passport_user\"> </div> <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\"> <button type=\"submit\" class=\"btn btn-success g-5\">\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c</button> </div> </form> </div> </div> </div> </body> </html> update_booking.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>Update your booking</title> </head> <body> <div class=\"container\"> <div class=\"row justify-content-center\"> <div class=\"col-8\"> <h2 class=\"mt-2\">\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</h2> {% block content %} <form method=\"post\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\"> <button type=\"submit\" class=\"btn btn-success g-5\">\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c</button> </div> </form> {% endblock %} </div> </div> </div> </body> </html> users_bookings.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"> <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script> <title>All bookings</title> </head> <body> <table class=\"table table-striped table-bordered table-hover\"> <thead class=\"table-success\"> <tr> <th scope=\"col\">\u041d\u043e\u043c\u0435\u0440 \u0437\u0430\u043a\u0430\u0437\u0430</th> <th scope=\"col\">\u041e\u0442\u0435\u043b\u044c</th> <th scope=\"col\">\u041d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b</th> <th scope=\"col\">\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430</th> <th scope=\"col\">\u0414\u0430\u0442\u0430 \u0432\u044b\u0435\u0437\u0434\u0430</th> <th scope=\"col\">\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c</th> <th scope=\"col\">\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438</th> </tr> </thead> {% for booking in object_list %} <tbody> <tr> <td>{{ booking.id }}</td> <td>{{ booking.room.hotel.name }}</td> <td>{{ booking.room.number }}</td> <td>{{ booking.date_start }}</td> <td>{{ booking.date_end}}</td> <td>{{ booking.total_price }}</td> <td class=\"d-flex justify-content-start gap-2\"> <a href=\"/bookings/update/{{ booking.id }}\"> <button type=\"button\" class=\"btn btn-outline-primary\">\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c</button> </a> <a href=\"/bookings/delete/{{ booking.id }}\"> <button type=\"button\" class=\"btn btn-outline-danger\">\u0423\u0434\u0430\u043b\u0438\u0442\u044c</button> </a> </td> </tr> </tbody> {% endfor %} </table> </body> </html>","title":"HTML-\u043a\u043e\u0434 \u0441\u0442\u0440\u0430\u043d\u0438\u0446"},{"location":"lab_3/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3 \u0412\u0430\u0440\u0438\u0430\u043d\u0442 1 \"\u041e\u0442\u0435\u043b\u044c\" \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b. \u0422\u0430\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u043d\u043e\u043c\u0435\u0440\u0430\u0445, \u043e \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0445 \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445 \u0438 \u043e \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445, \u0443\u0431\u0438\u0440\u0430\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u043d\u043e\u043c\u0435\u0440\u0430\u0445. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0438 \u0438\u043c\u0435\u044e\u0442\u0441\u044f \u043d\u043e\u043c\u0435\u0440\u0430 \u0442\u0440\u0435\u0445 \u0442\u0438\u043f\u043e\u0432: \u043e\u0434\u043d\u043e\u043c\u0435\u0441\u0442\u043d\u044b\u0439, \u0434\u0432\u0443\u0445\u043c\u0435\u0441\u0442\u043d\u044b\u0439 \u0438 \u0442\u0440\u0435\u0445\u043c\u0435\u0441\u0442\u043d\u044b\u0439, \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c\u044e \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0432 \u0441\u0443\u0442\u043a\u0438. \u0412 \u043a\u0430\u0436\u0434\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435 \u0435\u0441\u0442\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d. \u041e \u043a\u0430\u0436\u0434\u043e\u043c \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u044e\u0449\u0435\u043c \u0434\u043e\u043b\u0436\u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430, \u0444\u0430\u043c\u0438\u043b\u0438\u044f, \u0438\u043c\u044f, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e, \u0433\u043e\u0440\u043e\u0434, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u043d \u043f\u0440\u0438\u0431\u044b\u043b, \u0434\u0430\u0442\u0430 \u043f\u043e\u0441\u0435\u043b\u0435\u043d\u0438\u044f \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0447\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440. \u041e \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f: \u0444\u0430\u043c\u0438\u043b\u0438\u044f, \u0438\u043c\u044f, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e, \u0433\u0434\u0435 (\u044d\u0442\u0430\u0436) \u0438 \u043a\u043e\u0433\u0434\u0430 (\u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438) \u043e\u043d \u0443\u0431\u0438\u0440\u0430\u0435\u0442. \u0421\u043b\u0443\u0436\u0430\u0449\u0438\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b \u0443\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u0441\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u043d\u0430 \u043e\u0434\u043d\u043e\u043c \u044d\u0442\u0430\u0436\u0435 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0434\u043d\u0438 \u043d\u0435\u0434\u0435\u043b\u0438, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432 \u0440\u0430\u0437\u043d\u044b\u0435 \u0434\u043d\u0438 \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u0443\u0431\u0438\u0440\u0430\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u044d\u0442\u0430\u0436\u0438. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438: \u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445, \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u0432\u0448\u0438\u0445 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435, \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438; \u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u043f\u0440\u0438\u0431\u044b\u0432\u0448\u0438\u0445 \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430, \u043e \u0442\u043e\u043c, \u043a\u0442\u043e \u0438\u0437 \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 \u0443\u0431\u0438\u0440\u0430\u043b \u043d\u043e\u043c\u0435\u0440 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043d\u043e\u043c\u0435\u0440\u043e\u0432; \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043c\u0435\u0441\u0442\u0430 \u0436\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043b\u0438 \u0432 \u0442\u0435 \u0436\u0435 \u0434\u043d\u0438, \u0447\u0442\u043e \u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442, \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438: \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0438\u043b\u0438 \u0443\u0432\u043e\u043b\u0438\u0442\u044c \u0441\u043b\u0443\u0436\u0430\u0449\u0435\u0433\u043e \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b; \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043b\u0443\u0436\u0430\u0449\u0435\u0433\u043e; \u043f\u043e\u0441\u0435\u043b\u0438\u0442\u044c \u0438\u043b\u0438 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0442\u0430\u043a\u0436\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0432\u044b\u0434\u0430\u0447\u0438 \u043e\u0442\u0447\u0435\u0442\u0430 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0433\u043e\u0434\u0430. \u0422\u0430\u043a\u043e\u0439 \u043e\u0442\u0447\u0435\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f: \u0447\u0438\u0441\u043b\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435; \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u043d\u0435 \u043a\u0430\u0436\u0434\u043e\u043c \u044d\u0442\u0430\u0436\u0435; \u043e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0434\u043e\u0445\u043e\u0434\u0430 \u0437\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u043d\u043e\u043c\u0435\u0440; \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u044b\u0439 \u0434\u043e\u0445\u043e\u0434 \u043f\u043e \u0432\u0441\u0435\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435. \u041c\u043e\u0434\u0435\u043b\u044c \u0411\u0414 \u0424\u0430\u0439\u043b\u044b \u0441 \u043a\u043e\u0434\u043e\u043c models.py class Guest(models.Model): passport = models.TextField(\"\u041d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430\", max_length=10, primary_key=True) last_name = models.TextField(\"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\", max_length=20, null=False) first_name = models.TextField(\"\u0418\u043c\u044f\", max_length=20, null=False) patronymic = models.TextField(\"\u041e\u0442\u0447\u0435\u0441\u0442\u0432\u043e\", max_length=20, null=True) city = models.TextField(\"\u0413\u043e\u0440\u043e\u0434\", max_length=30, null=False) def __str__(self): return f\"{self.passport} {self.last_name} {self.first_name}\" class TypesRoom(models.Model): ROOM_TYPES = ( (\"\u041e\u0434\u043d\u043e\u043c\u0435\u0441\u0442\u043d\u044b\u0439\", \"\u041e\u0434\u043d\u043e\u043c\u0435\u0441\u0442\u043d\u044b\u0439\"), (\"\u0414\u0432\u0443\u043c\u0435\u0441\u0442\u043d\u044b\u0439\", \"\u0414\u0432\u0443\u043c\u0435\u0441\u0442\u043d\u044b\u0439\"), (\"\u0422\u0440\u0435\u0445\u043c\u0435\u0441\u0442\u043d\u044b\u0439\", \"\u0422\u0440\u0435\u0445\u043c\u0435\u0441\u0442\u043d\u044b\u0439\"), ) name_type = models.TextField(\"\u0422\u0438\u043f \u043d\u043e\u043c\u0435\u0440\u0430\", choices=ROOM_TYPES) count_beds = models.IntegerField(\"\u041a\u043e\u043b-\u0432\u043e \u0441\u043f\u0430\u043b\u044c\u043d\u044b\u0445 \u043c\u0435\u0441\u0442\") price = models.FloatField(\"\u0426\u0435\u043d\u0430\") def __str__(self): return self.name_type class Room(models.Model): room_number = models.IntegerField(\"\u041d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b\", primary_key=True) room_type = models.ForeignKey(TypesRoom, on_delete=models.CASCADE, verbose_name=\"\u0422\u0438\u043f \u043d\u043e\u043c\u0435\u0440\u0430\") floor = models.PositiveIntegerField(\"\u042d\u0442\u0430\u0436\") phone_number = models.PositiveIntegerField(\"\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430\") class Booking(models.Model): room_number = models.ForeignKey(Room, on_delete=models.CASCADE, related_name=\"booking_room\") guest = models.ForeignKey(Guest, on_delete=models.CASCADE, related_name=\"booking_guest\") date_start = models.DateField(\"\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430\") date_end = models.DateField(\"\u0414\u0430\u0442\u0430 \u0432\u044b\u0435\u0437\u0434\u0430\") total_price = models.PositiveIntegerField(\"\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f\", null=True) @property def days(self): return (self.date_end - self.date_start).days def check_date(self): if self.date_start >= self.date_end: raise ValidationError(\"\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0439!\") def save(self, *args, **kwargs): self.total_price = self.room_number.room_type.price * self.days super(Booking, self).save(*args, **kwargs) class Workers(models.Model): last_name = models.TextField(\"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\", max_length=20, null=False) first_name = models.TextField(\"\u0418\u043c\u044f\", max_length=20, null=False) patronymic = models.TextField(\"\u041e\u0442\u0447\u0435\u0441\u0442\u0432\u043e\", max_length=20, null=True) def __str__(self): return f\"{self.last_name} {self.first_name}\" class Cleaning(models.Model): WEEK_DAYS = ( (\"\u041f\u041d\", \"\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\"), (\"\u0412\u0422\", \"\u0412\u0442\u043e\u0440\u043d\u0438\u043a\"), (\"\u0421\u0420\", \"\u0421\u0440\u0435\u0434\u0430\"), (\"\u0427\u0422\", \"\u0427\u0435\u0442\u0432\u0435\u0440\u0433\"), (\"\u041f\u0422\", \"\u041f\u044f\u0442\u043d\u0438\u0446\u0430\"), (\"\u0421\u0411\", \"\u0421\u0443\u0431\u0431\u043e\u0442\u0430\"), (\"\u0412\u0421\", \"\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435\"), ) id_worker = models.ForeignKey(Workers, on_delete=models.CASCADE) floor = models.PositiveIntegerField(\"\u042d\u0442\u0430\u0436\") day_of_week = models.TextField(\"\u0414\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438\", choices=WEEK_DAYS) urls.py urlpatterns = [ path(\"guest/new\", CreateGuest.as_view()), path(\"guest/all\", AllGuests.as_view()), path(\"guest/<str:city>\", GuestsByCity.as_view()), path(\"guest/<int:room_number>/<str:period_date_start>/<str:period_date_end>\", GuestsByPeriod.as_view()), path(\"guests/<str:passport>/<str:period_date_start>/<str:period_date_end>\", GuestsSamePeriods.as_view()), path(\"workers/all\", AllWorkers.as_view()), path(\"workers/<int:guest_passport>/<str:day_of_week>\", GetWorkerByDayAndClient.as_view()), path(\"workers/new\", CreateWorker.as_view()), path(\"workers/<int:pk>\", DestroyWorker.as_view()), path(\"cleaning/all\", AllCleaning.as_view()), path(\"cleaning/new\", CreateCleaning.as_view()), path(\"cleaning/<int:pk>\", UpdateCleaning.as_view()), path(\"booking/all\", AllBookings.as_view()), path(\"booking/new\", CreateBooking.as_view()), path(\"booking/<int:pk>\", DeleteBooking.as_view()), path(\"rooms/free\", FreeRoomsCount.as_view()), path(\"report/<int:quarter>\", QReport.as_view()), ] views.py # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u0433\u043e\u0441\u0442\u0435\u0439 \u043e\u0442\u0435\u043b\u044f class AllGuests(ListAPIView): queryset = Guest.objects.all() serializer_class = GuestSerializer # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 class AllBookings(ListAPIView): queryset = Booking.objects.all() serializer_class = BookingSerializer # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432 class AllWorkers(ListAPIView): queryset = Workers.objects.all() serializer_class = WorkersSerializer # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0433\u043e\u0441\u0442\u0435\u0439 \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430 class GuestsByCity(RetrieveAPIView): lookup_field = \"city\" queryset = Guest.objects.all() serializer_class = CountSerializer def retrieve(self, request, *args, **kwargs): serializer = self.serializer_class( CountObj(self.queryset.filter(**{self.lookup_field: kwargs[self.lookup_field]}).count()) ) return Response(serializer.data) # \u0433\u043e\u0441\u0442\u0438, \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0435 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 class GuestsByPeriod(ListAPIView): queryset = Booking.objects.all() serializer_class = GuestsByPeriodSerializer def get_queryset(self): return self.queryset.filter( Q(date_start__gte=self.kwargs[\"period_date_start\"], date_end__lte=self.kwargs[\"period_date_end\"]) | Q(date_start__lte=self.kwargs[\"period_date_end\"], date_end__gte=self.kwargs[\"period_date_start\"]), room_number=self.kwargs[\"room_number\"] ) # \u043a\u0442\u043e \u0443\u0431\u0438\u0440\u0430\u0435\u0442 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u0432 \u043d\u043e\u043c\u0435\u0440\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 class GetWorkerByDayAndClient(APIView): def get(self, request, **kwargs): worker = Cleaning.objects.filter(day_of_week=kwargs[\"day_of_week\"], floor__in=Room.objects.filter( booking_room__guest=kwargs[\"guest_passport\"]).values( \"floor\")) serializer = CleaningSerializer(worker, many=True) return Response(serializer.data) # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u043d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f class FreeRoomsCount(RetrieveAPIView): serializer_class = CountSerializer def filtered_queryset(self): return Room.objects.exclude( Q(booking_room__date_end__gt=datetime.now(), booking_room__date_start__lt=datetime.now())).distinct() def retrieve(self, request, *args, **kwargs): serializer = self.serializer_class( CountObj(self.filtered_queryset().count()) ) return Response(serializer.data) # \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043c\u0435\u0441\u0442\u0430 \u0436\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043b\u0438 \u0432 \u0442\u0435 \u0436\u0435 \u0434\u043d\u0438, \u0447\u0442\u043e \u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442, \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438. class GuestsSamePeriods(APIView): def get(self, request, *args, **kwargs): result = [] needed_guests_bookings = Guest.objects.get(passport=kwargs[\"passport\"]).booking_guest.filter( Q(date_start__gte=self.kwargs[\"period_date_start\"], date_end__lte=self.kwargs[\"period_date_end\"]) | Q(date_start__lte=self.kwargs[\"period_date_end\"], date_end__gte=self.kwargs[\"period_date_start\"])) for booking in needed_guests_bookings: result += [booking.guest for booking in Booking.objects.filter( Q(date_start__gte=booking.date_start, date_end__lte=booking.date_end) | Q(date_start__lte=booking.date_end, date_end__gte=booking.date_start) ).exclude(guest__passport=kwargs[\"passport\"]) ] serializer = GuestSerializer(result, many=True) return Response(serializer.data) #\u043a\u0432\u0430\u0440\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0442\u0447\u0435\u0442 class QReport(APIView): def get(self, *args, **kwargs): year = datetime.today().year if kwargs[\"quarter\"] == 1: filter = Q(date_start__gte=date(year, 1, 1), date_start__lte=date(year, 3, 31)) elif kwargs[\"quarter\"] == 2: filter = Q(date_start__gte=date(year, 4, 1), date_start__lte=date(year, 6, 30)) elif kwargs[\"quarter\"] == 3: filter = Q(date_start__gte=date(year, 7, 1), date_start__lte=date(year, 9, 30)) elif kwargs[\"quarter\"] == 4: filter = Q(date_start__gte=date(year, 10, 1), date_start__lte=date(year, 12, 31)) floors = [] for f in Room.objects.values(\"floor\").annotate(Count(\"room_number\")): floors.append({\"floor\": f[\"floor\"], \"count\": f[\"room_number__count\"]}) rooms = [] for room in Room.objects.all(): counter = 0 room_profit = 0 for booking in room.booking_room.filter(filter): counter += 1 room_profit += booking.total_price print(booking, ' ', counter, ' ', room_profit) rooms.append( { \"name\": room.room_number, \"count\": counter, \"profit\": room_profit } ) total_profit = sum(r[\"profit\"] for r in rooms) return render( self.request, \"report.html\", {\"rooms\": rooms, \"floors\": floors, \"profit\": total_profit} ) # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0433\u043e\u0441\u0442\u044f class CreateGuest(CreateAPIView, ListAPIView): queryset = Guest.objects.all() serializer_class = GuestSerializer # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f / \u043f\u043e\u0441\u0435\u043b\u0435\u043d\u0438\u0435 \u0433\u043e\u0441\u0442\u044f class CreateBooking(CreateAPIView): serializer_class = CreateBookingSerializer permission_classes = [IsAuthenticated] def get(self, request): today = datetime.date(datetime.now()) book = Room.objects.filter(Q(booking_room__date_end__lt=today) | Q(booking_room__date_start__gt=today) | Q(booking_room__isnull=True)).distinct() serializer = BookSerializerOnlyRoom(book, many=True) return Response({\"\u0421\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u043d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\": serializer.data}) def post(self, request, **kwargs): serializer = BookingSerializer(data=request.data) needed_books = Room.objects.exclude( Q(booking_room__date_end__gt=datetime.now(), booking_room__date_start__lt=datetime.now())).distinct() if len(needed_books) == 0: return Response(\"\u041d\u0435\u0442 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043c\u0435\u0441\u0442 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443\", status=status.HTTP_400_BAD_REQUEST) serializer.is_valid(raise_exception=True) serializer.save() return Response(\"\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043e\", status=status.HTTP_201_CREATED) # \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f / \u0432\u044b\u0441\u0435\u043b\u0435\u043d\u0438\u0435 \u0433\u043e\u0441\u0442\u044f class DeleteBooking(DestroyAPIView): queryset = Booking.objects.all() serializer_class = BookingSerializer permission_classes = [IsAuthenticated] # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430 class CreateWorker(CreateAPIView, ListAPIView): queryset = Workers.objects.all() serializer_class = WorkersSerializer permission_classes = [IsAuthenticated] # \u0443\u0432\u043e\u043b\u044c\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430 class DestroyWorker(DestroyAPIView): queryset = Workers.objects.all() serializer_class = WorkersSerializer permission_classes = [IsAuthenticated] # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0433\u0440\u0430\u0444\u0438\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 class AllCleaning(ListAPIView): queryset = Cleaning.objects.all() serializer_class = CleaningSerializer # \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0433\u0440\u0430\u0444\u0438\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 class CreateCleaning(CreateAPIView, ListAPIView): queryset = Cleaning.objects.all() serializer_class = CleaningSerializer permission_classes = [IsAuthenticated] class UpdateCleaning(RetrieveUpdateDestroyAPIView): queryset = Cleaning.objects.all() serializer_class = CleaningSerializer permission_classes = [IsAuthenticated] serializers.py class GuestSerializer(serializers.ModelSerializer): class Meta: model = Guest fields = \"__all__\" class BookingSerializer(serializers.ModelSerializer): class Meta: model = Booking fields = \"__all__\" class WorkersSerializer(serializers.ModelSerializer): class Meta: model = Workers fields = \"__all__\" class CreateBookingSerializer(serializers.ModelSerializer): class Meta: model = Booking fields = ('room_number', 'guest', 'date_start', 'date_end') class CountObj: def __init__(self, count): self.count = count class CountSerializer(serializers.Serializer): count = serializers.IntegerField() class BookSerializerOnlyRoom(serializers.ModelSerializer): class Meta: model = Booking fields = [\"room_number\"] class GuestsByPeriodSerializer(serializers.ModelSerializer): class Meta: model = Booking fields = [\"guest\"] class CleaningWorkerSerializer(serializers.ModelSerializer): class Meta: model = Cleaning fields = ['id_worker'] class CleaningSerializer(serializers.ModelSerializer): class Meta: model = Cleaning fields = \"__all__\" admin.py from django.contrib import admin from .models import * admin.site.register(Booking) admin.site.register(Guest) admin.site.register(Room) admin.site.register(TypesRoom) admin.site.register(Workers) admin.site.register(Cleaning) HTML-\u043a\u043e\u0434 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441 \u043e\u0442\u0447\u0435\u0442\u043e\u043c report.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Report</title> </head> <body> <h3>\u041e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0434\u043e\u0445\u043e\u0434\u0430 \u0437\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0438 \u0447\u0438\u0441\u043b\u043e \u0433\u043e\u0441\u0442\u0435\u0439, \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u0432\u0448\u0438\u0445 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435</h3> {% for room in rooms %} <p>\u041a\u043e\u043c\u043d\u0430\u0442\u0430: {{ room.name }}. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0433\u043e\u0441\u0442\u0435\u0439: {{ room.count }}. \u0414\u043e\u0445\u043e\u0434: {{ room.profit }}</p> {% endfor %} <hr> <h3>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442 \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u043c \u044d\u0442\u0430\u0436\u0435:</h3> {% for floor in floors %} <p>\u042d\u0442\u0430\u0436: {{ floor.floor }}. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442: {{ floor.count }}</p> {% endfor %} <hr> <h3>\u0421\u0443\u043c\u043c\u0430\u0440\u043d\u044b\u0439 \u0434\u043e\u0445\u043e\u0434 \u043f\u043e \u0432\u0441\u0435\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435</h3> <p>\u041e\u0431\u0449\u0438\u0439 \u0434\u043e\u0445\u043e\u0434: {{ profit }}</p> </body> </html> API","title":"\u041b\u0420 3"},{"location":"lab_3/#3","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3"},{"location":"lab_3/#1","text":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b. \u0422\u0430\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u043d\u043e\u043c\u0435\u0440\u0430\u0445, \u043e \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0445 \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445 \u0438 \u043e \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445, \u0443\u0431\u0438\u0440\u0430\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u043d\u043e\u043c\u0435\u0440\u0430\u0445. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0438 \u0438\u043c\u0435\u044e\u0442\u0441\u044f \u043d\u043e\u043c\u0435\u0440\u0430 \u0442\u0440\u0435\u0445 \u0442\u0438\u043f\u043e\u0432: \u043e\u0434\u043d\u043e\u043c\u0435\u0441\u0442\u043d\u044b\u0439, \u0434\u0432\u0443\u0445\u043c\u0435\u0441\u0442\u043d\u044b\u0439 \u0438 \u0442\u0440\u0435\u0445\u043c\u0435\u0441\u0442\u043d\u044b\u0439, \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c\u044e \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0432 \u0441\u0443\u0442\u043a\u0438. \u0412 \u043a\u0430\u0436\u0434\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435 \u0435\u0441\u0442\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d. \u041e \u043a\u0430\u0436\u0434\u043e\u043c \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u044e\u0449\u0435\u043c \u0434\u043e\u043b\u0436\u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430, \u0444\u0430\u043c\u0438\u043b\u0438\u044f, \u0438\u043c\u044f, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e, \u0433\u043e\u0440\u043e\u0434, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u043d \u043f\u0440\u0438\u0431\u044b\u043b, \u0434\u0430\u0442\u0430 \u043f\u043e\u0441\u0435\u043b\u0435\u043d\u0438\u044f \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0447\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440. \u041e \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f: \u0444\u0430\u043c\u0438\u043b\u0438\u044f, \u0438\u043c\u044f, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e, \u0433\u0434\u0435 (\u044d\u0442\u0430\u0436) \u0438 \u043a\u043e\u0433\u0434\u0430 (\u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438) \u043e\u043d \u0443\u0431\u0438\u0440\u0430\u0435\u0442. \u0421\u043b\u0443\u0436\u0430\u0449\u0438\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b \u0443\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u0441\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u043d\u0430 \u043e\u0434\u043d\u043e\u043c \u044d\u0442\u0430\u0436\u0435 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0434\u043d\u0438 \u043d\u0435\u0434\u0435\u043b\u0438, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432 \u0440\u0430\u0437\u043d\u044b\u0435 \u0434\u043d\u0438 \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u0443\u0431\u0438\u0440\u0430\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u044d\u0442\u0430\u0436\u0438. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438: \u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445, \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u0432\u0448\u0438\u0445 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435, \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438; \u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u043f\u0440\u0438\u0431\u044b\u0432\u0448\u0438\u0445 \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430, \u043e \u0442\u043e\u043c, \u043a\u0442\u043e \u0438\u0437 \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 \u0443\u0431\u0438\u0440\u0430\u043b \u043d\u043e\u043c\u0435\u0440 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043d\u043e\u043c\u0435\u0440\u043e\u0432; \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043c\u0435\u0441\u0442\u0430 \u0436\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043b\u0438 \u0432 \u0442\u0435 \u0436\u0435 \u0434\u043d\u0438, \u0447\u0442\u043e \u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442, \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438: \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0438\u043b\u0438 \u0443\u0432\u043e\u043b\u0438\u0442\u044c \u0441\u043b\u0443\u0436\u0430\u0449\u0435\u0433\u043e \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b; \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043b\u0443\u0436\u0430\u0449\u0435\u0433\u043e; \u043f\u043e\u0441\u0435\u043b\u0438\u0442\u044c \u0438\u043b\u0438 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0442\u0430\u043a\u0436\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0432\u044b\u0434\u0430\u0447\u0438 \u043e\u0442\u0447\u0435\u0442\u0430 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0433\u043e\u0434\u0430. \u0422\u0430\u043a\u043e\u0439 \u043e\u0442\u0447\u0435\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f: \u0447\u0438\u0441\u043b\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435; \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u043d\u0435 \u043a\u0430\u0436\u0434\u043e\u043c \u044d\u0442\u0430\u0436\u0435; \u043e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0434\u043e\u0445\u043e\u0434\u0430 \u0437\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u043d\u043e\u043c\u0435\u0440; \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u044b\u0439 \u0434\u043e\u0445\u043e\u0434 \u043f\u043e \u0432\u0441\u0435\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435.","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 1 \"\u041e\u0442\u0435\u043b\u044c\""},{"location":"lab_3/#_1","text":"","title":"\u041c\u043e\u0434\u0435\u043b\u044c \u0411\u0414"},{"location":"lab_3/#_2","text":"models.py class Guest(models.Model): passport = models.TextField(\"\u041d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430\", max_length=10, primary_key=True) last_name = models.TextField(\"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\", max_length=20, null=False) first_name = models.TextField(\"\u0418\u043c\u044f\", max_length=20, null=False) patronymic = models.TextField(\"\u041e\u0442\u0447\u0435\u0441\u0442\u0432\u043e\", max_length=20, null=True) city = models.TextField(\"\u0413\u043e\u0440\u043e\u0434\", max_length=30, null=False) def __str__(self): return f\"{self.passport} {self.last_name} {self.first_name}\" class TypesRoom(models.Model): ROOM_TYPES = ( (\"\u041e\u0434\u043d\u043e\u043c\u0435\u0441\u0442\u043d\u044b\u0439\", \"\u041e\u0434\u043d\u043e\u043c\u0435\u0441\u0442\u043d\u044b\u0439\"), (\"\u0414\u0432\u0443\u043c\u0435\u0441\u0442\u043d\u044b\u0439\", \"\u0414\u0432\u0443\u043c\u0435\u0441\u0442\u043d\u044b\u0439\"), (\"\u0422\u0440\u0435\u0445\u043c\u0435\u0441\u0442\u043d\u044b\u0439\", \"\u0422\u0440\u0435\u0445\u043c\u0435\u0441\u0442\u043d\u044b\u0439\"), ) name_type = models.TextField(\"\u0422\u0438\u043f \u043d\u043e\u043c\u0435\u0440\u0430\", choices=ROOM_TYPES) count_beds = models.IntegerField(\"\u041a\u043e\u043b-\u0432\u043e \u0441\u043f\u0430\u043b\u044c\u043d\u044b\u0445 \u043c\u0435\u0441\u0442\") price = models.FloatField(\"\u0426\u0435\u043d\u0430\") def __str__(self): return self.name_type class Room(models.Model): room_number = models.IntegerField(\"\u041d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b\", primary_key=True) room_type = models.ForeignKey(TypesRoom, on_delete=models.CASCADE, verbose_name=\"\u0422\u0438\u043f \u043d\u043e\u043c\u0435\u0440\u0430\") floor = models.PositiveIntegerField(\"\u042d\u0442\u0430\u0436\") phone_number = models.PositiveIntegerField(\"\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430\") class Booking(models.Model): room_number = models.ForeignKey(Room, on_delete=models.CASCADE, related_name=\"booking_room\") guest = models.ForeignKey(Guest, on_delete=models.CASCADE, related_name=\"booking_guest\") date_start = models.DateField(\"\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430\") date_end = models.DateField(\"\u0414\u0430\u0442\u0430 \u0432\u044b\u0435\u0437\u0434\u0430\") total_price = models.PositiveIntegerField(\"\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f\", null=True) @property def days(self): return (self.date_end - self.date_start).days def check_date(self): if self.date_start >= self.date_end: raise ValidationError(\"\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0439!\") def save(self, *args, **kwargs): self.total_price = self.room_number.room_type.price * self.days super(Booking, self).save(*args, **kwargs) class Workers(models.Model): last_name = models.TextField(\"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\", max_length=20, null=False) first_name = models.TextField(\"\u0418\u043c\u044f\", max_length=20, null=False) patronymic = models.TextField(\"\u041e\u0442\u0447\u0435\u0441\u0442\u0432\u043e\", max_length=20, null=True) def __str__(self): return f\"{self.last_name} {self.first_name}\" class Cleaning(models.Model): WEEK_DAYS = ( (\"\u041f\u041d\", \"\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\"), (\"\u0412\u0422\", \"\u0412\u0442\u043e\u0440\u043d\u0438\u043a\"), (\"\u0421\u0420\", \"\u0421\u0440\u0435\u0434\u0430\"), (\"\u0427\u0422\", \"\u0427\u0435\u0442\u0432\u0435\u0440\u0433\"), (\"\u041f\u0422\", \"\u041f\u044f\u0442\u043d\u0438\u0446\u0430\"), (\"\u0421\u0411\", \"\u0421\u0443\u0431\u0431\u043e\u0442\u0430\"), (\"\u0412\u0421\", \"\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435\"), ) id_worker = models.ForeignKey(Workers, on_delete=models.CASCADE) floor = models.PositiveIntegerField(\"\u042d\u0442\u0430\u0436\") day_of_week = models.TextField(\"\u0414\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438\", choices=WEEK_DAYS) urls.py urlpatterns = [ path(\"guest/new\", CreateGuest.as_view()), path(\"guest/all\", AllGuests.as_view()), path(\"guest/<str:city>\", GuestsByCity.as_view()), path(\"guest/<int:room_number>/<str:period_date_start>/<str:period_date_end>\", GuestsByPeriod.as_view()), path(\"guests/<str:passport>/<str:period_date_start>/<str:period_date_end>\", GuestsSamePeriods.as_view()), path(\"workers/all\", AllWorkers.as_view()), path(\"workers/<int:guest_passport>/<str:day_of_week>\", GetWorkerByDayAndClient.as_view()), path(\"workers/new\", CreateWorker.as_view()), path(\"workers/<int:pk>\", DestroyWorker.as_view()), path(\"cleaning/all\", AllCleaning.as_view()), path(\"cleaning/new\", CreateCleaning.as_view()), path(\"cleaning/<int:pk>\", UpdateCleaning.as_view()), path(\"booking/all\", AllBookings.as_view()), path(\"booking/new\", CreateBooking.as_view()), path(\"booking/<int:pk>\", DeleteBooking.as_view()), path(\"rooms/free\", FreeRoomsCount.as_view()), path(\"report/<int:quarter>\", QReport.as_view()), ] views.py # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u0433\u043e\u0441\u0442\u0435\u0439 \u043e\u0442\u0435\u043b\u044f class AllGuests(ListAPIView): queryset = Guest.objects.all() serializer_class = GuestSerializer # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 class AllBookings(ListAPIView): queryset = Booking.objects.all() serializer_class = BookingSerializer # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u0441\u0435\u0445 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432 class AllWorkers(ListAPIView): queryset = Workers.objects.all() serializer_class = WorkersSerializer # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0433\u043e\u0441\u0442\u0435\u0439 \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430 class GuestsByCity(RetrieveAPIView): lookup_field = \"city\" queryset = Guest.objects.all() serializer_class = CountSerializer def retrieve(self, request, *args, **kwargs): serializer = self.serializer_class( CountObj(self.queryset.filter(**{self.lookup_field: kwargs[self.lookup_field]}).count()) ) return Response(serializer.data) # \u0433\u043e\u0441\u0442\u0438, \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0435 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 class GuestsByPeriod(ListAPIView): queryset = Booking.objects.all() serializer_class = GuestsByPeriodSerializer def get_queryset(self): return self.queryset.filter( Q(date_start__gte=self.kwargs[\"period_date_start\"], date_end__lte=self.kwargs[\"period_date_end\"]) | Q(date_start__lte=self.kwargs[\"period_date_end\"], date_end__gte=self.kwargs[\"period_date_start\"]), room_number=self.kwargs[\"room_number\"] ) # \u043a\u0442\u043e \u0443\u0431\u0438\u0440\u0430\u0435\u0442 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u0432 \u043d\u043e\u043c\u0435\u0440\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 class GetWorkerByDayAndClient(APIView): def get(self, request, **kwargs): worker = Cleaning.objects.filter(day_of_week=kwargs[\"day_of_week\"], floor__in=Room.objects.filter( booking_room__guest=kwargs[\"guest_passport\"]).values( \"floor\")) serializer = CleaningSerializer(worker, many=True) return Response(serializer.data) # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u043d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f class FreeRoomsCount(RetrieveAPIView): serializer_class = CountSerializer def filtered_queryset(self): return Room.objects.exclude( Q(booking_room__date_end__gt=datetime.now(), booking_room__date_start__lt=datetime.now())).distinct() def retrieve(self, request, *args, **kwargs): serializer = self.serializer_class( CountObj(self.filtered_queryset().count()) ) return Response(serializer.data) # \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043c\u0435\u0441\u0442\u0430 \u0436\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043b\u0438 \u0432 \u0442\u0435 \u0436\u0435 \u0434\u043d\u0438, \u0447\u0442\u043e \u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442, \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438. class GuestsSamePeriods(APIView): def get(self, request, *args, **kwargs): result = [] needed_guests_bookings = Guest.objects.get(passport=kwargs[\"passport\"]).booking_guest.filter( Q(date_start__gte=self.kwargs[\"period_date_start\"], date_end__lte=self.kwargs[\"period_date_end\"]) | Q(date_start__lte=self.kwargs[\"period_date_end\"], date_end__gte=self.kwargs[\"period_date_start\"])) for booking in needed_guests_bookings: result += [booking.guest for booking in Booking.objects.filter( Q(date_start__gte=booking.date_start, date_end__lte=booking.date_end) | Q(date_start__lte=booking.date_end, date_end__gte=booking.date_start) ).exclude(guest__passport=kwargs[\"passport\"]) ] serializer = GuestSerializer(result, many=True) return Response(serializer.data) #\u043a\u0432\u0430\u0440\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0442\u0447\u0435\u0442 class QReport(APIView): def get(self, *args, **kwargs): year = datetime.today().year if kwargs[\"quarter\"] == 1: filter = Q(date_start__gte=date(year, 1, 1), date_start__lte=date(year, 3, 31)) elif kwargs[\"quarter\"] == 2: filter = Q(date_start__gte=date(year, 4, 1), date_start__lte=date(year, 6, 30)) elif kwargs[\"quarter\"] == 3: filter = Q(date_start__gte=date(year, 7, 1), date_start__lte=date(year, 9, 30)) elif kwargs[\"quarter\"] == 4: filter = Q(date_start__gte=date(year, 10, 1), date_start__lte=date(year, 12, 31)) floors = [] for f in Room.objects.values(\"floor\").annotate(Count(\"room_number\")): floors.append({\"floor\": f[\"floor\"], \"count\": f[\"room_number__count\"]}) rooms = [] for room in Room.objects.all(): counter = 0 room_profit = 0 for booking in room.booking_room.filter(filter): counter += 1 room_profit += booking.total_price print(booking, ' ', counter, ' ', room_profit) rooms.append( { \"name\": room.room_number, \"count\": counter, \"profit\": room_profit } ) total_profit = sum(r[\"profit\"] for r in rooms) return render( self.request, \"report.html\", {\"rooms\": rooms, \"floors\": floors, \"profit\": total_profit} ) # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0433\u043e\u0441\u0442\u044f class CreateGuest(CreateAPIView, ListAPIView): queryset = Guest.objects.all() serializer_class = GuestSerializer # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f / \u043f\u043e\u0441\u0435\u043b\u0435\u043d\u0438\u0435 \u0433\u043e\u0441\u0442\u044f class CreateBooking(CreateAPIView): serializer_class = CreateBookingSerializer permission_classes = [IsAuthenticated] def get(self, request): today = datetime.date(datetime.now()) book = Room.objects.filter(Q(booking_room__date_end__lt=today) | Q(booking_room__date_start__gt=today) | Q(booking_room__isnull=True)).distinct() serializer = BookSerializerOnlyRoom(book, many=True) return Response({\"\u0421\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u043d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\": serializer.data}) def post(self, request, **kwargs): serializer = BookingSerializer(data=request.data) needed_books = Room.objects.exclude( Q(booking_room__date_end__gt=datetime.now(), booking_room__date_start__lt=datetime.now())).distinct() if len(needed_books) == 0: return Response(\"\u041d\u0435\u0442 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043c\u0435\u0441\u0442 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0434\u0430\u0442\u0443\", status=status.HTTP_400_BAD_REQUEST) serializer.is_valid(raise_exception=True) serializer.save() return Response(\"\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043e\", status=status.HTTP_201_CREATED) # \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f / \u0432\u044b\u0441\u0435\u043b\u0435\u043d\u0438\u0435 \u0433\u043e\u0441\u0442\u044f class DeleteBooking(DestroyAPIView): queryset = Booking.objects.all() serializer_class = BookingSerializer permission_classes = [IsAuthenticated] # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430 class CreateWorker(CreateAPIView, ListAPIView): queryset = Workers.objects.all() serializer_class = WorkersSerializer permission_classes = [IsAuthenticated] # \u0443\u0432\u043e\u043b\u044c\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430 class DestroyWorker(DestroyAPIView): queryset = Workers.objects.all() serializer_class = WorkersSerializer permission_classes = [IsAuthenticated] # \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0433\u0440\u0430\u0444\u0438\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 class AllCleaning(ListAPIView): queryset = Cleaning.objects.all() serializer_class = CleaningSerializer # \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0433\u0440\u0430\u0444\u0438\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 class CreateCleaning(CreateAPIView, ListAPIView): queryset = Cleaning.objects.all() serializer_class = CleaningSerializer permission_classes = [IsAuthenticated] class UpdateCleaning(RetrieveUpdateDestroyAPIView): queryset = Cleaning.objects.all() serializer_class = CleaningSerializer permission_classes = [IsAuthenticated] serializers.py class GuestSerializer(serializers.ModelSerializer): class Meta: model = Guest fields = \"__all__\" class BookingSerializer(serializers.ModelSerializer): class Meta: model = Booking fields = \"__all__\" class WorkersSerializer(serializers.ModelSerializer): class Meta: model = Workers fields = \"__all__\" class CreateBookingSerializer(serializers.ModelSerializer): class Meta: model = Booking fields = ('room_number', 'guest', 'date_start', 'date_end') class CountObj: def __init__(self, count): self.count = count class CountSerializer(serializers.Serializer): count = serializers.IntegerField() class BookSerializerOnlyRoom(serializers.ModelSerializer): class Meta: model = Booking fields = [\"room_number\"] class GuestsByPeriodSerializer(serializers.ModelSerializer): class Meta: model = Booking fields = [\"guest\"] class CleaningWorkerSerializer(serializers.ModelSerializer): class Meta: model = Cleaning fields = ['id_worker'] class CleaningSerializer(serializers.ModelSerializer): class Meta: model = Cleaning fields = \"__all__\" admin.py from django.contrib import admin from .models import * admin.site.register(Booking) admin.site.register(Guest) admin.site.register(Room) admin.site.register(TypesRoom) admin.site.register(Workers) admin.site.register(Cleaning)","title":"\u0424\u0430\u0439\u043b\u044b \u0441 \u043a\u043e\u0434\u043e\u043c"},{"location":"lab_3/#html-","text":"report.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Report</title> </head> <body> <h3>\u041e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0434\u043e\u0445\u043e\u0434\u0430 \u0437\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0438 \u0447\u0438\u0441\u043b\u043e \u0433\u043e\u0441\u0442\u0435\u0439, \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u0432\u0448\u0438\u0445 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435</h3> {% for room in rooms %} <p>\u041a\u043e\u043c\u043d\u0430\u0442\u0430: {{ room.name }}. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0433\u043e\u0441\u0442\u0435\u0439: {{ room.count }}. \u0414\u043e\u0445\u043e\u0434: {{ room.profit }}</p> {% endfor %} <hr> <h3>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442 \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u043c \u044d\u0442\u0430\u0436\u0435:</h3> {% for floor in floors %} <p>\u042d\u0442\u0430\u0436: {{ floor.floor }}. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442: {{ floor.count }}</p> {% endfor %} <hr> <h3>\u0421\u0443\u043c\u043c\u0430\u0440\u043d\u044b\u0439 \u0434\u043e\u0445\u043e\u0434 \u043f\u043e \u0432\u0441\u0435\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435</h3> <p>\u041e\u0431\u0449\u0438\u0439 \u0434\u043e\u0445\u043e\u0434: {{ profit }}</p> </body> </html>","title":"HTML-\u043a\u043e\u0434 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441 \u043e\u0442\u0447\u0435\u0442\u043e\u043c"},{"location":"lab_3/#api","text":"","title":"API"},{"location":"lab_4/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 4 \u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u0424\u0430\u0439\u043b\u044b \u0441 \u043a\u043e\u0434\u043e\u043c (\u0431\u044d\u043a\u0435\u043d\u0434) models.py class Event(models.Model): CATEGORY = [ (\"\u0421\u043f\u043e\u0440\u0442 \u0438 \u0444\u0438\u0442\u043d\u0435\u0441\", \"\u0421\u043f\u043e\u0440\u0442 \u0438 \u0444\u0438\u0442\u043d\u0435\u0441\"), (\"\u0418\u0441\u043a\u0443\u0441\u0441\u0442\u0432\u043e \u0438 \u043a\u0443\u043b\u044c\u0442\u0443\u0440\u0430\", \"\u0418\u0441\u043a\u0443\u0441\u0441\u0442\u0432\u043e \u0438 \u043a\u0443\u043b\u044c\u0442\u0443\u0440\u0430\"), (\"\u041f\u0440\u0438\u0440\u043e\u0434\u0430\", \"\u041f\u0440\u0438\u0440\u043e\u0434\u0430\"), (\"\u041a\u0430\u0440\u044c\u0435\u0440\u0430 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435\", \"\u041a\u0430\u0440\u044c\u0435\u0440\u0430 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435\"), (\"\u0422\u0435\u0430\u0442\u0440\u044b\", \"\u0422\u0435\u0430\u0442\u0440\u044b\"), (\"\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b\", \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b\"), ] TYPES_EVENTS = [ (\"offline\", \"\u041e\u0447\u043d\u043e\"), (\"online\", \"\u041e\u043d\u043b\u0430\u0439\u043d\"), ] DISTRICT = [ ('any', '\u041b\u044e\u0431\u043e\u0439'), (\"admiral\", \"\u0410\u0434\u043c\u0438\u0440\u0430\u043b\u0442\u0435\u0439\u0441\u043a\u0438\u0439\"), (\"vasileostrov\", \"\u0412\u0430\u0441\u0438\u043b\u0435\u043e\u0441\u0442\u0440\u043e\u0432\u0441\u043a\u043e\u0439\"), (\"vyborg\", \"\u0412\u044b\u0431\u043e\u0440\u0433\u0441\u043a\u0438\u0439\"), (\"kalininsk\", \"\u041a\u0430\u043b\u0438\u043d\u0438\u043d\u0441\u043a\u0438\u0439\"), (\"kirov\", \"\u041a\u0438\u0440\u043e\u0432\u0441\u043a\u0438\u0439\"), (\"krasnogvard\", \"\u041a\u0440\u0430\u0441\u043d\u043e\u0433\u0432\u0430\u0440\u0434\u0435\u0439\u0441\u043a\u0438\u0439\"), (\"krasnosel\", \"\u041a\u0440\u0430\u0441\u043d\u043e\u0441\u0435\u043b\u044c\u0441\u043a\u0438\u0439\"), (\"kronshtad\", \"\u041a\u0440\u043e\u043d\u0448\u0442\u0430\u0434\u0441\u043a\u0438\u0439\"), (\"moskovsk\", \"\u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u0438\u0439\"), (\"nevsk\", \"\u041d\u0435\u0432\u0441\u043a\u0438\u0439\"), (\"petrograd\", \"\u041f\u0435\u0442\u0440\u043e\u0433\u0440\u0430\u0434\u0441\u043a\u0438\u0439\"), (\"center\", \"\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0439\"), ] name = models.CharField(max_length=100) category = models.CharField(max_length=30, choices=CATEGORY) place = models.CharField(max_length=100) date = models.DateTimeField() price = models.CharField(max_length=50) photo = models.CharField(max_length=100) type_event = models.CharField(max_length=10, choices=TYPES_EVENTS) district = models.CharField(max_length=20, choices=DISTRICT) description = models.TextField(blank=True) contact_number = models.CharField(max_length=12, blank=True) contact_name = models.CharField(max_length=50, blank=True) map = models.TextField(blank=True) def __str__(self): return self.name class User(AbstractUser): last_name = models.CharField(max_length=50) first_name = models.CharField(max_length=50) email = models.CharField(max_length=50) REQUIRED_FIELDS = ['last_name', 'first_name', 'email'] class UsersEvents(models.Model): user_id = models.ForeignKey(User, on_delete=models.CASCADE, related_name='reg_user') event_id = models.ForeignKey(Event, on_delete=models.CASCADE, related_name='reg_event') urls.py urlpatterns = [ path('events', EventsList.as_view()), path('events/<int:pk>', EventRetrieve.as_view()), path('users', UserList.as_view()), path('users/<int:pk>', UserRetrieve.as_view()), path('users_events', UserEventsList.as_view()), path('users_events/add', RegisterUserOnEvent.as_view()), path('users_events/<int:pk>', DeleteUserEvent.as_view()) ] views.py class EventsList(ListAPIView): serializer_class = EventSerializer def get_queryset(self): queryset = Event.objects.all() category = self.request.query_params.get('category') district = self.request.query_params.get('district') type_event = self.request.query_params.get('type_event') if (type_event is not None) and (type_event != ''): queryset = queryset.filter(type_event=type_event) if (category is not None) and (category != ''): queryset = queryset.filter(category=category) if (district is not None) and (district != ''): queryset = queryset.filter(district=district) return queryset class EventRetrieve(RetrieveAPIView): serializer_class = EventSerializer queryset = Event.objects.all() class UserList(ListAPIView): serializer_class = UserSerializer queryset = Event.objects.all() class UserCreate(CreateAPIView): serializer_class = UserSerializer queryset = Event.objects.all() class UserRetrieve(RetrieveUpdateAPIView): serializer_class = UserSerializer queryset = Event.objects.all() class UserEventsList(ListAPIView): def get(self, request): user_events = UsersEvents.objects.filter(user_id=request.user.id) serializer = UserEventsSerializer(user_events, many=True) return Response({\"user_events\": serializer.data}) class RegisterUserOnEvent(views.APIView): def post(self, request): event_id = request.data.get('event') event = Event.objects.get(id=event_id) user_event = UsersEvents.objects.create(user_id=request.user, event_id=event) user_event.save() return Response({\"Success\": \"Registration user on event {} done succesfully\".format(user_event.id)}) class DeleteUserEvent(DestroyAPIView): serializer_class = UserOnEventSerializer queryset = UsersEvents.objects.all() serializers.py class EventSerializer(serializers.ModelSerializer): class Meta: model = Event fields = \"__all__\" class UserSerializer(serializers.ModelSerializer): class Meta: model = User fields = \"__all__\" class UserOnEventSerializer(serializers.ModelSerializer): class Meta: model = UsersEvents fields = \"__all__\" class UserEventsSerializer(serializers.ModelSerializer): event_id = EventSerializer() class Meta: model = UsersEvents fields = (\"id\", \"event_id\") \u0424\u0430\u0439\u043b\u044b \u0441 \u043a\u043e\u0434\u043e\u043c Vue.js router index.js import { createRouter, createWebHistory } from 'vue-router' const router = createRouter({ history: createWebHistory(import.meta.env.BASE_URL), routes: [ { path: '/registration', name: 'registration', component: () => import('../views/RegisterView.vue') }, { path: '/login', name: 'login', component: () => import('../views/LogInView.vue') }, { path: '/', name: 'main', component: () => import('../views/MainView.vue') }, { path: '/lk', name: 'lk', component: () => import('../views/LkView.vue') }, { path: '/lk/data', name: 'lk_data', component: () => import('../views/LkData.vue') }, { path: '/events/:id', name: 'eventInfo', props: true, component: () => import('../views/CardView.vue') } ] }) export default router api index.js import instance from \"../api/instance\" import UserAPI from \"../api/user\" import EventsAPI from \"../api/event\" import UsersEventsAPI from \"../api/users_events\" const userAPI = new UserAPI(instance) const eventsAPI = new EventsAPI(instance) const userEventsAPI = new UsersEventsAPI(instance) export { userAPI, eventsAPI, userEventsAPI } instance.js import axios from 'axios' const apiURL = 'http://127.0.0.1:8000' const token = localStorage.getItem('token') const instance = axios.create({ baseURL: apiURL, }) if (token){ instance.defaults.headers.common['Authorization'] = \"Token \" + token; } export default instance event.js - \u0441\u043e\u0431\u044b\u0442\u0438\u044f class EventsAPI { constructor(instance) { this.API = instance } fetchEvent = async (id) => { return this.API({ url: `/api/v1/events/${id}` }) } fetchEvents = async (id) => { return this.API({ url: `/api/v1/events` }) } fetchEventsByCategory = async (category) => { if (category === '') { return this.fetchEvents(); } return this.API({ url: `/api/v1/events?category=${category}` }) } fetchEventsByCategoryDistrictType = async (category, district, type_event) => { if ((category === '') && (district === '') && (type_event === '')) { return this.fetchEvents(); } return this.API({ url: `/api/v1/events?category=${category}&district=${district}&type_event=${type_event}` }) } } export default EventsAPI user.js - \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c class UserAPI { constructor(instance) { this.API = instance } login = async (data) => { return this.API({ method: 'POST', url: '/auth/token/login/', data, headers: { 'Content-Type': 'application/json' } }) } register = async (data) => { return this.API({ method: 'POST', url: '/auth/users/', data, headers: { 'Content-Type': 'application/json' } }) } logout = async (token) => { return this.API({ method: 'POST', url: '/auth/token/logout/', headers: { 'Authorization': `Token ${token}` } }) } currentUserInfo = async (token) => { return this.API({ url: '/auth/users/me/', headers: { 'Authorization': `Token ${token}` } }) } } export default UserAPI user_events.js - \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f class UsersEventsAPI { constructor(instance) { this.API = instance } fetchUsersEvents = async (token) => { return this.API({ url: '/api/v1/users_events', headers: { 'Authorization': `Token ${token}` } }) } addUsersEvents = async (data, token) => { return this.API({ method: 'POST', url: '/api/v1/users_events/add', data, headers: { 'Content-Type': 'application/json', 'Authorization': `Token ${token}` } }) } removeUsersEvent = async (id, token) => { return this.API({ method: 'DELETE', url: `/api/v1/users_events/${id}`, headers: { 'Content-Type': 'application/json', 'Authorization': `Token ${token}` } }) } } export default UsersEventsAPI stores index.py import { persist } from 'pinia-persists' import { createPinia } from 'pinia' const pinia = createPinia() pinia.use(persist()) export default pinia event.js - \u0441\u043e\u0431\u044b\u0442\u0438\u0435 import { defineStore } from 'pinia' import { eventsAPI } from '../api' const useEventsStore = defineStore('events', { state: () => ({ events: [], categoryFilter: '', districtFilter: '', typeFilter: '', event: {} }), actions: { async fetchEvents() { const response = await eventsAPI.fetchEvents() this.events = response.data return response }, async fetchEvent(id) { const response = await eventsAPI.fetchEvent(id) this.event = response.data return response }, async fetchEventsByCategoryDistrictType(category, district, type_event) { this.categoryFilter = category === this.categoryFilter ? '' : category; this.districtFilter = district === this.districtFilter ? '' : district; this.typeFilter = type_event === this.typeFilter ? '' : type_event; const response = await eventsAPI.fetchEventsByCategoryDistrictType(this.categoryFilter, this.districtFilter, this.typeFilter) this.events = response.data return response } } }) export default useEventsStore user.js - \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c import {defineStore} from 'pinia' import {userAPI} from '../api' const useUserStore = defineStore('user', { state: () => ({ user: {}, token: null, }), actions: { setToken(token) { this.token = token || null }, async login(data) { const response = await userAPI.login(data) this.token = response?.data?.auth_token || null if (this.token) { localStorage.setItem(\"token\", this.token) } return response }, async register(user) { const response = await userAPI.register(user) return response }, async logout() { let response = null if (this.token) { response = await userAPI.logout(this.token) if (response.status === 204) { window.localStorage.removeItem('token') this.token = ''; this.user = {}; } } return response }, async currentUserInfo() { let response = null if (this.token) { response = await userAPI.currentUserInfo(this.token) this.user = response.data?.username ? response.data : {} } return this.user }, }, }) export default useUserStore user_events.js - \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f import {userEventsAPI} from '../api' const useUserEventsStore = defineStore('user_events', { state: () => ({ userEvents: [], }), actions: { async fetchUsersEvents(token) { const response = await userEventsAPI.fetchUsersEvents(token) this.userEvents = response.data.user_events return response }, async addUsersEvents(event, token) { const response = await userEventsAPI.addUsersEvents( {event}, token) return response }, async removeUsersEvent(id, token) { const response = await userEventsAPI.removeUsersEvent(id, token) return response }, } }) export default useUserEventsStore components Header.vue - \u0428\u0430\u043f\u043a\u0430 \u0441\u0430\u0439\u0442\u0430 <template> <nav class=\"navbar navbar-expand-lg navbar-dark\" style=\"background-color: #20c997;\"> <div class=\"container-fluid\"> <a class=\"navbar-brand\" href=\"#\"> <img src=\"./icons/logo.PNG\" alt=\"\u041b\u043e\u0433\u043e\" width=\"30\" height=\"24\" class=\"d-inline-block align-text-top\"> EventMap </a> <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"> <span class=\"navbar-toggler-icon\"></span> </button> <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\"> <div class=\"navbar-nav\"> <a class=\"nav-link active\" aria-current=\"page\" href=\"#\" @click=\"$router.push('/')\">\u041f\u043e\u0438\u0441\u043a \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439</a> </div> </div> <form v-if=\"!token\" class=\"justify-content-end\"> <a class=\"btn btn-light me-2\" href=\"#\" role=\"button\" id=\"enter\" @click=\"$router.push('/login/')\">\u0412\u0445\u043e\u0434</a> <a class=\"btn btn-sm btn-outline-light\" role=\"button\" id=\"registr\" href=\"#\" @click=\"$router.push('/registration/')\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</a> </form> <form v-else class=\"justify-content-end\"> <a class=\"btn btn-light me-2\" href=\"#\" role=\"button\" id=\"enterlk\" @click=\"$router.push('/lk/')\">\u041b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442</a> <a class=\"btn btn-sm btn-outline-light\" href=\"#\" role=\"button\" id=\"logout\" @click=\"Logout\">\u0412\u044b\u0445\u043e\u0434</a> </form> </div> </nav> </template> <script> import { mapState, mapActions } from 'pinia'; import useUserStore from '@/stores/user' export default { name: 'Header', computed: { ...mapState(useUserStore, ['token']) }, mounted() { this.setToken(window.localStorage.getItem('token')) }, methods: { ...mapActions(useUserStore, ['setToken', 'logout']), async Logout() { await this.logout() this.$router.push('/') } } } </script> Footer.vue - \u043f\u043e\u0434\u0432\u0430\u043b \u0441\u0430\u0439\u0442\u0430 <template> <footer class=\"d-flex flex-wrap justify-content-between align-items-center py-3 border-top navbar-expand-lg navbar-dark\" style=\"background-color: #20c997;\"> <p class=\"col-md-4 mb-0 text-white\">\u00a9 2022 Company, Inc</p> <a href=\"/\" class=\"col-md-4 d-flex align-items-center justify-content-center mb-3 mb-md-0 me-md-auto link-dark text-white text-decoration-none\"> <img src=\"./icons/logo.PNG\" alt=\"\u041b\u043e\u0433\u043e\" width=\"30\" height=\"24\" class=\"d-inline-block align-text-top \"> EventMap </a> <ul class=\"nav col-md-4 justify-content-end navbar-nav\"> <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2\">Home</a></li> <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2\">Features</a></li> <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2\">Pricing</a></li> <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2\">FAQs</a></li> <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2\">About</a></li> </ul> </footer> </template> <script> export default { name: \"Footer\" } </script> Filter.vue - \u0444\u0438\u043b\u044c\u0442\u0440\u044b \u0434\u043b\u044f \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b <template> <div class=\"container d-flex p-3 justify-content-center h2\">\u041d\u0430\u0439\u0434\u0438 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435</div> <div class=\"container d-grid gap-2 d-md-flex justify-content-center\"> <div class=\"row\"> <div class=\"form col-12 col-sm-6 col-lg-4 col-md-5 col-xl-3\"> <select class=\"form-select event-region\" aria-label=\".form-select-lg example\" id=\"district\" v-model=\"district\"> <option value=\"\" >\u0420\u0430\u0439\u043e\u043d</option> <option value=\"admiral\">\u0410\u0434\u043c\u0438\u0440\u0430\u043b\u0442\u0435\u0439\u0441\u043a\u0438\u0439</option> <option value=\"vasileostrov\">\u0412\u0430\u0441\u0438\u043b\u0435\u043e\u0441\u0442\u0440\u043e\u0432\u0441\u043a\u0438\u0439</option> <option value=\"vyborg\">\u0412\u044b\u0431\u043e\u0440\u0433\u0441\u043a\u0438\u0439</option> <option value=\"kalininsk\">\u041a\u0430\u043b\u0438\u043d\u0438\u043d\u0441\u043a\u0438\u0439</option> <option value=\"kirov\">\u041a\u0438\u0440\u043e\u0432\u0441\u043a\u0438\u0439</option> <option value=\"krasnogvard\">\u041a\u0440\u0430\u0441\u043d\u043e\u0433\u0432\u0430\u0440\u0434\u0435\u0439\u0441\u043a\u0438\u0439</option> <option value=\"krasnosel\">\u041a\u0440\u0430\u0441\u043d\u043e\u0441\u0435\u043b\u044c\u0441\u043a\u0438\u0439</option> <option value=\"kronshtad\">\u041a\u0440\u043e\u043d\u0448\u0442\u0430\u0434\u0441\u043a\u0438\u0439</option> <option value=\"moskov\">\u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u0438\u0439</option> <option value=\"nevsk\">\u041d\u0435\u0432\u0441\u043a\u0438\u0439</option> <option value=\"petrograd\">\u041f\u0435\u0442\u0440\u043e\u0433\u0440\u0430\u0434\u0441\u043a\u0438\u0439</option> <option value=\"center\">\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0439</option> </select> </div> <div class=\"form col-12 col-sm-6 col-lg-4 col-md-5 col-xl-3\"> <select class=\"form-select event-category\" aria-label=\".form-select-lg example\" id=\"category\" v-model=\"category\"> <option value=\"\">\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f</option> <option value=\"\u0422\u0435\u0430\u0442\u0440\u044b\" >\u0422\u0435\u0430\u0442\u0440\u044b</option> <option value=\"\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b\" >\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b</option> <option value=\"\u0418\u0433\u0440\u044b\" >\u0418\u0433\u0440\u044b</option> <option value=\"\u0421\u043f\u043e\u0440\u0442 \u0438 \u0444\u0438\u0442\u043d\u0435\u0441\" >\u0421\u043f\u043e\u0440\u0442 \u0438 \u0444\u0438\u0442\u043d\u0435\u0441</option> <option value=\"\u0418\u0441\u0441\u043a\u0443\u0441\u0442\u0432\u043e \u0438 \u043a\u0443\u043b\u044c\u0442\u0443\u0440\u0430\" >\u0418\u0441\u0441\u043a\u0443\u0441\u0442\u0432\u043e \u0438 \u043a\u0443\u043b\u044c\u0442\u0443\u0440\u0430</option> <option value=\"\u041a\u0430\u0440\u044c\u0435\u0440\u0430 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435\" >\u041a\u0430\u0440\u044c\u0435\u0440\u0430 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435</option> </select> </div> <div class=\"form col-12 col-sm-6 col-lg-4 col-md-5 col-xl-3\"> <select class=\"form-select type-event\" aria-label=\".form-select-lg example\" id=\"type-event\" v-model=\"type_event\"> <option value=\"\">\u041b\u044e\u0431\u043e\u0439 \u0442\u0438\u043f</option> <option value=\"offline\">\u041e\u0447\u043d\u043e</option> <option value=\"online\">\u041e\u043d\u043b\u0430\u0439\u043d</option> </select> </div> <form class=\"d-flex justify-content-end col input-group mb-3 search-form\"> <button class=\"btn btn-outline-secondary search-btn\" type=\"button\" id=\"button-search\" @click=\"filterEvents\">\u041f\u043e\u0438\u0441\u043a</button> </form> </div> </div> </template> <script> import { mapActions, mapState } from 'pinia'; import useEventsStore from '@/stores/event' export default { name: \"Filter\", data() { return { category: '', district: '', type_event: '' } }, computed: { ...mapState(useEventsStore, ['events', 'categoryFilter', 'districtFilter', 'typeFilter']), }, methods: { ...mapActions(useEventsStore, ['fetchEventsByCategoryDistrictType']), filterEvents() { this.fetchEventsByCategoryDistrictType(this.category, this.district, this.type_event) } } } </script> LogInForm.vue - \u0444\u043e\u0440\u043c\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 <template> <main> <div class=\"container col-md-6 p-5\"> <form> <div class=\"mb-3\"> <label for=\"email\" class=\"form-label\">\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0439 e-mail:</label> <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" v-model=\"email\"> </div> <div class=\"mb-3\"> <label for=\"password\" class=\"form-label\">\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c:</label> <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" v-model=\"password\"> </div> <p v-if=\"error\" class=\"error text-danger\"> <strong>{{ error }}</strong> </p> <div class=\"p-4 d-flex justify-content-center\"> <button type=\"button\" class=\"btn btn-success mb-3\" @click=\"logIn\">\u0412\u043e\u0439\u0442\u0438</button> </div> </form> <div class=\"container d-flex\"> <p class=\"text-black\">\u0415\u0449\u0435 \u043d\u0435\u0442 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430?</p> <a href=\"#\" class=\"ms-2 text-success\" @click=\"$router.push('/registration/')\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0441\u044f</a> </div> </div> </main> </template> <script> import { mapActions, mapState } from 'pinia' import router from '@/router' import useUserStore from '@/stores/user' export default { name: \"LogIn\", data(){ return { email : \"\", password : \"\", error: \"\" } }, methods: { ...mapActions(useUserStore, ['login']), async logIn() { if (!this.email || !this.password) { this.error = '\u041e\u0448\u0438\u0431\u043a\u0430! \u0412\u0432\u0435\u0434\u0438\u0442\u0435 email \u0438 \u043f\u0430\u0440\u043e\u043b\u044c.' return } try { await this.login({ username: this.email, password: this.password }) } catch (e) { this.error = '\u041e\u0448\u0438\u0431\u043a\u0430! \u041d\u0435\u0432\u0435\u0440\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u043d email \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c.' return } this.$router.push('/lk') }, } } </script> RegisterForm.vue - \u0444\u043e\u0440\u043c\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 <template> <main> <div class=\"container col-md-6 p-5\"> <form @submit.prevent=\"register\"> <div class=\"mb-3\"> <label for=\"first_name\" class=\"form-label\">\u0418\u043c\u044f:</label> <input type=\"text\" class=\"form-control\" id=\"first_name\" name=\"first_name\" v-model=\"first_name\"> </div> <div class=\"mb-3\"> <label for=\"last_name\" class=\"form-label\">\u0424\u0430\u043c\u0438\u043b\u0438\u044f:</label> <input type=\"text\" class=\"form-control\" id=\"last_name\" name=\"last_name\" v-model=\"last_name\"> </div> <div class=\"mb-3\"> <label for=\"email\" class=\"form-label\">\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0439 e-mail:</label> <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" v-model=\"email\"> </div> <div class=\"mb-3\"> <label for=\"password\" class=\"form-label\">\u041f\u0440\u0438\u0434\u0443\u043c\u0430\u0439\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c:</label> <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" v-model=\"password\"> </div> <p v-if=\"error\" class=\"error text-danger\"> <strong>{{ error }}</strong> </p> <div class=\"p-4 d-flex justify-content-center\"> <button type=\"button\" class=\"btn btn-success mb-3\" @click=\"reg\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f</button> </div> </form> <div class=\"container d-flex\"> <p class=\"text-black\">\u0423\u0436\u0435 \u0435\u0441\u0442\u044c \u0430\u043a\u043a\u0430\u0443\u043d\u0442?</p> <a href=\"#\" class=\"ms-2 text-success\" @click=\"$router.push('/login/')\">\u0412\u043e\u0439\u0442\u0438</a> </div> </div> </main> </template> <script> import { mapActions, mapState } from 'pinia' import router from '@/router' import useUserStore from '@/stores/user' export default { name: 'RegisterForm', data() { return { first_name: \"\", last_name: \"\", email: \"\", username: \"\", password: \"\", error: \"\" }; }, methods: { ...mapActions(useUserStore, ['register', 'login']), async reg() { this.error = '' if (!this.email || !this.password) { this.error = '\u041e\u0448\u0438\u0431\u043a\u0430! \u0412\u0432\u0435\u0434\u0438\u0442\u0435 email \u0438 \u043f\u0430\u0440\u043e\u043b\u044c.' return } let result try { result = await this.register({ last_name: this.last_name, first_name: this.first_name, username: this.email, email: this.email, password: this.password }) } catch (e) { this.error = '\u041e\u0448\u0438\u0431\u043a\u0430! \u041d\u0435\u0432\u0435\u0440\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u043d email \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c.' return } if (result?.status === 201) { await this.login({ username: this.email, password: this.password }) this.$router.push('/lk') } } } } </script> EventCard - \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f <template> <div class=\"col-4\"> <div class=\"card h-100\" :event_id=\"id\"> <img :src=\"photo\" class=\"card-img-top img-fluid\" :alt=\"name\"> <div class=\"card-header d-flex justify-content-between align-content-center\"> <a class=\"btn btn-outline-secondary btn-sm\">{{ category }}</a> <p class=\"card-text\">{{ date }}</p> </div> <div class=\"card-body text-center d-flex flex-column justify-content-around p-3\"> <h5 class=\"card-title\">{{ name }}</h5> <div class=\"card-text d-flex justify-content-around \"> <p class=\"card-text\">{{ place }}</p> <p class=\"card-text text-success\">{{ price }}</p> </div> <div class=\"card-text d-flex justify-content-around \"> <RouterLink :to=\"`/events/${id}`\" class=\"text-black nav-link\"> <a href=\"#\" class=\"btn align-self-center\" style=\"background-color: #20c997;\" >\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435...</a> </RouterLink> </div> </div> </div> </div> </template> <script> export default { name: \"EventCard\", props: { id: {type: Number, required: true}, name: {type: String, required: true}, price: {type: String, required: true}, photo: {type: String, required: true}, category: {type: String, required: true}, district: {type: String, required: true}, place: {type: String, required: true}, type_event: {type: String, required: true}, date: {type: Date, required: true}, description: {type: String} }, } </script> ListEvents.vue - \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a \u0441\u043e\u0431\u044b\u0442\u0438\u044f <template> <div class=\"container p-3\"> <div v-for=\"(eventRow, eventRowIndex) in eventRows\" :key=\"`event-row-${eventRowIndex}`\" class=\"event-row row py-2\" > <EventCard v-for=\"(event) in eventRow\" :key=\"`event-${event.id}`\" :id=\"event.id\" :photo=\"event.photo\" :name=\"event.name\" :price=\"event.price\" :category=\"event.category\" :district=\"event.district\" :place=\"event.place\" :type_event=\"event.type_event\" :date=\"event.date\" /> </div> </div> </template> <script> import {mapActions, mapState} from 'pinia' import useEventsStore from \"@/stores/event\"; import EventCard from \"./EventCard.vue\"; export default { name: \"ListEvents\", components: {EventCard}, computed: { ...mapState(useEventsStore, ['events']), eventRows() { return this.getEventsRows(3) }, }, methods: { ...mapActions(useEventsStore, ['fetchEvents']), getEventsRows(rowSize) { const eventRows = []; for (let i = 0; i < this.events.length; i += rowSize) { const row = this.events.slice(i, i + rowSize); eventRows.push(row); } return eventRows; }, }, mounted() { this.fetchEvents() } } </script> EventInfo.vue - \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u043e\u0431\u044b\u0442\u0438\u0438 <template> <section class=\"container col-8 border justify-content-center bg-white py-3 min-vh-100\"> <div class=\"d-flex flex-row\"> <img :src=\"event.photo\" :alt=\"event.name\" class=\"img-fluid\" style=\"max-height: 300px; width: auto;\"> <div class=\"d-flex flex-column p-2 \"> <h2 class=\"text-center\">{{ event.name }}</h2> <dl class=\"row p-4\"> <dt class=\"col-sm-7\">\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f:</dt> <dd class=\"col-sm-5\">{{ event.date }}</dd> <dt class=\"col-sm-7\">\u041c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f:</dt> <dd class=\"col-sm-5\">{{ event.place }}</dd> <dt class=\"col-sm-7\">\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c:</dt> <dd class=\"col-sm-5\">{{ event.price }}</dd> </dl> </div> </div> <section class=\"py-3 px-1 mb-3\"> <div v-if=\"event.description\"> <h4 class=\"mb-2\">\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: </h4> <p>{{ event.description }}</p> </div> <div v-if=\"event.contact_number\"> <h4 class=\"mb-2\">\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: </h4> <p>{{event.contact_number}} {{event.contact_name}}</p> </div> <form class=\"d-flex justify-content-center\"> <a href=\"#\" class=\"btn\" style=\"background-color: #20c997;\" @click=\"addUserEvent\">\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0438\u0435</a> </form> </section> <div class=\"d-flex justify-content-center\" v-if=\"event.map\"> <iframe :src=\"event.map\" width=\"700\" height=\"400\" frameborder=\"0\"></iframe> </div> </section> </template> <script> import {mapState, mapActions} from \"pinia\" import useEventsStore from \"@/stores/event\"; import useUserEventsStore from \"@/stores/users_events\"; import useUserStore from \"@/stores/user\"; export default { name: \"EventInfo\", computed: { ...mapState(useEventsStore, ['event', 'events']), ...mapState(useUserEventsStore, ['userEvents']), ...mapState(useUserStore, ['token']), }, mounted() { this.fetchEvent(this.$route.params.id) this.$watch( () => this.$route.params, (toParams) => { this.fetchEvent(toParams.id) } ) }, methods: { ...mapActions(useEventsStore, ['fetchEvent']), ...mapActions(useUserEventsStore, ['fetchUsersEvents', 'addUsersEvents']), addUserEvent() { this.addUsersEvents(this.event.id, this.token ).then(() => { this.fetchUsersEvents(this.token) }) }, } } </script> UserEventCard.vue - \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f (\u0432 \u041b\u041a), \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d <template> <div class=\"row col-10 g-0 mb-3 border\"> <div class=\"col-md-4 d-flex align-items-center\"> <img :src=\"event_id.photo\" class=\"img-fluid \" :alt=\"event_id.name\"> </div> <div class=\"col-md-8 d-flex flex-column justify-content-around\"> <div class=\"card-header d-flex justify-content-between p-4\"> <a class=\"btn btn-outline-secondary btn-sm\" role=\"button\">{{ event_id.category }}</a> <p class=\"card-text\">{{ event_id.date }}</p> </div> <div class=\"card-body text-center d-flex flex-column justify-content-around\" style=\"background-color: white\"> <h5 class=\"card-title\">{{ event_id.name }}</h5> <div class=\"card-text d-flex justify-content-around\"> <p class=\"card-location\">{{ event_id.place }}</p> <p class=\"card-cost\">{{ event_id.price }}</p> </div> <form class=\"flex-column justify-content-around\"> <RouterLink :to=\"`/events/${event_id.id}`\" class=\"text-black nav-link\"> <a href=\"#\" class=\"btn col-5 align-self-center mb-1\" style=\"background-color: #20c997;\" >\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435...</a> </RouterLink> <a href=\"#\" class=\"btn btn-danger col-5 align-self-center mb-1\" @click=\"removeEvent(id)\">\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c</a> </form> </div> </div> </div> </template> <script> import {mapActions, mapState} from \"pinia\"; import useUserEventsStore from \"@/stores/users_events\"; import useUserStore from \"@/stores/user\"; export default { name: \"UserEventCard\", props: { id: {type: Number, required: true}, event_id: { id: {type: Number, required: true}, name: {type: String, required: true}, price: {type: String, required: true}, photo: {type: String, required: true}, district: {type: String, required: true}, place: {type: String, required: true}, date: {type: String, required: true}, }, }, computed: { ...mapState(useUserEventsStore, ['userEvents']), ...mapState(useUserStore, ['token']), }, methods: { ...mapActions(useUserEventsStore, ['fetchUsersEvents', 'removeUsersEvent']), removeEvent(id) { this.removeUsersEvent(id, this.token ).then(() => { this.fetchUsersEvents(this.token) }) }, }, } </script> MyEvents.vue - \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u041b\u041a <template> <div class=\"col row-1 col-12 g-4 py-3\"> <UserEventCard v-for=\"(event) in userEvents\" :key=\"`user-event-${event.id}`\" :id=\"event.id\" :event_id=\"event.event_id\" /> </div> </template> <script> import {mapActions, mapState} from 'pinia' import useUserEventsStore from \"@/stores/users_events\"; import useUserStore from \"@/stores/user\"; import UserEventCard from \"./UserEventCard.vue\"; export default { name: \"MyEvents\", components: {UserEventCard}, computed: { ...mapState(useUserEventsStore, ['userEvents']), ...mapState(useUserStore, ['token']), }, methods: { ...mapActions(useUserEventsStore, ['fetchUsersEvents']), }, mounted() { this.fetchUsersEvents(this.token) } } </script> views MainView.vue - \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0435\u0439 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 <template> <Header/> <div class=\"min-vh-100\"> <Filter/> <ListEvents/> </div> <Footer/> </template> <script> import Header from \"../components/Header.vue\"; import Footer from \"../components/Footer.vue\"; import Filter from \"../components/Filter.vue\"; import EventCard from \"../components/EventCard.vue\"; import ListEvents from \"../components/ListEvents.vue\"; export default { name: \"MainView\", components: {ListEvents, EventCard, Filter, Footer, Header}, } </script> LogInView.vue - \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0432\u0445\u043e\u0434\u0430 <template> <Header/> <LogIn/> </template> <script> import LogIn from \"../components/LogInForm.vue\"; import Header from \"../components/Header.vue\"; import Footer from \"../components/Footer.vue\"; export default { name: \"LogInView\", components: {Footer, Header, LogIn}, } </script> RegisterView.vue - \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 <template> <Header/> <RegisterForm/> </template> <script> import RegisterForm from \"../components/RegisterForm.vue\"; import Header from \"../components/Header.vue\"; export default { name: \"RegisterView\", components: {Header, RegisterForm} } </script> LkView.vue - \u043b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442, \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f\u043c\u0438 <template> <Header/> <main class=\"p-5 container-fluid d-flex flex-row vh-100\"> <aside class=\"col-lg-3 d-flex flex-column justify-content-start\"> <img src=\"https://e7.pngegg.com/pngimages/398/54/png-clipart-silhouette-graphics-male-silhouette-animals-hand.png\" height=\"auto\" alt=\"\u0424\u043e\u0442\u043e \u043f\u0440\u043e\u0444\u0438\u043b\u044f\" class=\"img-fluid img-thumbnail\"> <ul class=\"list-group col-12\"> <li class=\"list-group-item\"> <a class=\"text-decoration-none link-dark\" href=\"#\" @click=\"$router.push('/lk/data')\">\u041c\u043e\u0438 \u0434\u0430\u043d\u043d\u044b\u0435</a> </li> <li class=\"list-group-item list-group-item-secondary\"> <a class=\"text-decoration-none link-dark active\" aria-current=\"true\" href=\"#\">\u041c\u043e\u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f</a> </li> <li class=\"list-group-item\"> <a class=\"text-danger text-decoration-none link-dark\" href=\"#\" @click=\"Logout\">\u0412\u044b\u0439\u0442\u0438</a> </li> </ul> </aside> <section class=\"col-lg-9 px-5\"> <h2>\u041c\u043e\u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f</h2> <MyEvents/> </section> </main> <Footer/> </template> <script> import Header from \"../components/Header.vue\"; import Footer from \"../components/Footer.vue\"; import MyEvents from \"../components/MyEvents.vue\"; import {mapActions, mapState} from \"pinia\"; import useUserStore from '@/stores/user' export default { name: \"LkView\", components: {MyEvents, Footer, Header}, computed: { ...mapState(useUserStore, ['token']) }, mounted() { this.setToken(window.localStorage.getItem('token')) }, methods: { ...mapActions(useUserStore, ['setToken', 'logout']), async Logout() { await this.logout() this.$router.push('/') } } } </script> LkData.vue - \u043b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442, \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f <template> <Header/> <main class=\"p-5 container-fluid d-flex flex-row vh-100\"> <aside class=\"col-lg-3 d-flex flex-column justify-content-start\"> <img src=\"https://e7.pngegg.com/pngimages/398/54/png-clipart-silhouette-graphics-male-silhouette-animals-hand.png\" height=\"auto\" alt=\"\u0424\u043e\u0442\u043e \u043f\u0440\u043e\u0444\u0438\u043b\u044f\" class=\"img-fluid img-thumbnail\"> <ul class=\"list-group col-12\"> <li class=\"list-group-item list-group-item-secondary\"> <a class=\"text-decoration-none link-dark active\" aria-current=\"true\" href=\"#\">\u041c\u043e\u0438 \u0434\u0430\u043d\u043d\u044b\u0435</a> </li> <li class=\"list-group-item\"> <a class=\"text-decoration-none link-dark \" href=\"#\" @click=\"$router.push('/lk/')\">\u041c\u043e\u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f</a> </li> <li class=\"list-group-item\"> <a class=\"text-danger text-decoration-none link-dark\" href=\"#\" @click=\"Logout\">\u0412\u044b\u0439\u0442\u0438</a> </li> </ul> </aside> <section class=\"col-lg-6 px-5\"> <h2>\u041c\u043e\u0438 \u0434\u0430\u043d\u043d\u044b\u0435</h2> <div class=\"row mt-4 \"> <ul class=\"list-group\"> <li class=\"list-group-item\">\u0418\u043c\u044f: {{ user.first_name }}</li> <li class=\"list-group-item\">\u0424\u0430\u043c\u0438\u043b\u0438\u044f: {{ user.last_name }}</li> <li class=\"list-group-item\">ID: {{ user.id }}</li> <li class=\"list-group-item\">Email: {{ user.email }}</li> <li class=\"list-group-item\">Username: {{ user.username }}</li> </ul> </div> </section> </main> <Footer/> </template> <script> import { mapState, mapActions } from 'pinia' import useUserStore from '@/stores/user' import Header from \"../components/Header.vue\"; import Footer from \"../components/Footer.vue\"; export default { name: \"LkData\", components: {Footer, Header}, computed: { ...mapState(useUserStore, ['user', 'token']), }, mounted() { this.currentUserInfo().then(result => { if (!result?.email) { this.$router.replace({ path:'/' }) } }) }, methods: { ...mapActions(useUserStore, ['currentUserInfo', 'logout']), async Logout() { await this.logout() this.$router.push('/') } } } </script> CardView.vue - \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0441\u043e\u0431\u044b\u0442\u0438\u0438 <template> <Header/> <EventInfo/> <Footer/> </template> <script> import Header from \"../components/Header.vue\"; import Footer from \"../components/Footer.vue\"; import EventInfo from \"../components/EventInfo.vue\"; export default { name: \"CardView\", components: {EventInfo, Footer, Header} } </script>","title":"\u041b\u0420 4"},{"location":"lab_4/#4","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 4"},{"location":"lab_4/#_1","text":"","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442"},{"location":"lab_4/#_2","text":"models.py class Event(models.Model): CATEGORY = [ (\"\u0421\u043f\u043e\u0440\u0442 \u0438 \u0444\u0438\u0442\u043d\u0435\u0441\", \"\u0421\u043f\u043e\u0440\u0442 \u0438 \u0444\u0438\u0442\u043d\u0435\u0441\"), (\"\u0418\u0441\u043a\u0443\u0441\u0441\u0442\u0432\u043e \u0438 \u043a\u0443\u043b\u044c\u0442\u0443\u0440\u0430\", \"\u0418\u0441\u043a\u0443\u0441\u0441\u0442\u0432\u043e \u0438 \u043a\u0443\u043b\u044c\u0442\u0443\u0440\u0430\"), (\"\u041f\u0440\u0438\u0440\u043e\u0434\u0430\", \"\u041f\u0440\u0438\u0440\u043e\u0434\u0430\"), (\"\u041a\u0430\u0440\u044c\u0435\u0440\u0430 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435\", \"\u041a\u0430\u0440\u044c\u0435\u0440\u0430 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435\"), (\"\u0422\u0435\u0430\u0442\u0440\u044b\", \"\u0422\u0435\u0430\u0442\u0440\u044b\"), (\"\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b\", \"\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b\"), ] TYPES_EVENTS = [ (\"offline\", \"\u041e\u0447\u043d\u043e\"), (\"online\", \"\u041e\u043d\u043b\u0430\u0439\u043d\"), ] DISTRICT = [ ('any', '\u041b\u044e\u0431\u043e\u0439'), (\"admiral\", \"\u0410\u0434\u043c\u0438\u0440\u0430\u043b\u0442\u0435\u0439\u0441\u043a\u0438\u0439\"), (\"vasileostrov\", \"\u0412\u0430\u0441\u0438\u043b\u0435\u043e\u0441\u0442\u0440\u043e\u0432\u0441\u043a\u043e\u0439\"), (\"vyborg\", \"\u0412\u044b\u0431\u043e\u0440\u0433\u0441\u043a\u0438\u0439\"), (\"kalininsk\", \"\u041a\u0430\u043b\u0438\u043d\u0438\u043d\u0441\u043a\u0438\u0439\"), (\"kirov\", \"\u041a\u0438\u0440\u043e\u0432\u0441\u043a\u0438\u0439\"), (\"krasnogvard\", \"\u041a\u0440\u0430\u0441\u043d\u043e\u0433\u0432\u0430\u0440\u0434\u0435\u0439\u0441\u043a\u0438\u0439\"), (\"krasnosel\", \"\u041a\u0440\u0430\u0441\u043d\u043e\u0441\u0435\u043b\u044c\u0441\u043a\u0438\u0439\"), (\"kronshtad\", \"\u041a\u0440\u043e\u043d\u0448\u0442\u0430\u0434\u0441\u043a\u0438\u0439\"), (\"moskovsk\", \"\u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u0438\u0439\"), (\"nevsk\", \"\u041d\u0435\u0432\u0441\u043a\u0438\u0439\"), (\"petrograd\", \"\u041f\u0435\u0442\u0440\u043e\u0433\u0440\u0430\u0434\u0441\u043a\u0438\u0439\"), (\"center\", \"\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0439\"), ] name = models.CharField(max_length=100) category = models.CharField(max_length=30, choices=CATEGORY) place = models.CharField(max_length=100) date = models.DateTimeField() price = models.CharField(max_length=50) photo = models.CharField(max_length=100) type_event = models.CharField(max_length=10, choices=TYPES_EVENTS) district = models.CharField(max_length=20, choices=DISTRICT) description = models.TextField(blank=True) contact_number = models.CharField(max_length=12, blank=True) contact_name = models.CharField(max_length=50, blank=True) map = models.TextField(blank=True) def __str__(self): return self.name class User(AbstractUser): last_name = models.CharField(max_length=50) first_name = models.CharField(max_length=50) email = models.CharField(max_length=50) REQUIRED_FIELDS = ['last_name', 'first_name', 'email'] class UsersEvents(models.Model): user_id = models.ForeignKey(User, on_delete=models.CASCADE, related_name='reg_user') event_id = models.ForeignKey(Event, on_delete=models.CASCADE, related_name='reg_event') urls.py urlpatterns = [ path('events', EventsList.as_view()), path('events/<int:pk>', EventRetrieve.as_view()), path('users', UserList.as_view()), path('users/<int:pk>', UserRetrieve.as_view()), path('users_events', UserEventsList.as_view()), path('users_events/add', RegisterUserOnEvent.as_view()), path('users_events/<int:pk>', DeleteUserEvent.as_view()) ] views.py class EventsList(ListAPIView): serializer_class = EventSerializer def get_queryset(self): queryset = Event.objects.all() category = self.request.query_params.get('category') district = self.request.query_params.get('district') type_event = self.request.query_params.get('type_event') if (type_event is not None) and (type_event != ''): queryset = queryset.filter(type_event=type_event) if (category is not None) and (category != ''): queryset = queryset.filter(category=category) if (district is not None) and (district != ''): queryset = queryset.filter(district=district) return queryset class EventRetrieve(RetrieveAPIView): serializer_class = EventSerializer queryset = Event.objects.all() class UserList(ListAPIView): serializer_class = UserSerializer queryset = Event.objects.all() class UserCreate(CreateAPIView): serializer_class = UserSerializer queryset = Event.objects.all() class UserRetrieve(RetrieveUpdateAPIView): serializer_class = UserSerializer queryset = Event.objects.all() class UserEventsList(ListAPIView): def get(self, request): user_events = UsersEvents.objects.filter(user_id=request.user.id) serializer = UserEventsSerializer(user_events, many=True) return Response({\"user_events\": serializer.data}) class RegisterUserOnEvent(views.APIView): def post(self, request): event_id = request.data.get('event') event = Event.objects.get(id=event_id) user_event = UsersEvents.objects.create(user_id=request.user, event_id=event) user_event.save() return Response({\"Success\": \"Registration user on event {} done succesfully\".format(user_event.id)}) class DeleteUserEvent(DestroyAPIView): serializer_class = UserOnEventSerializer queryset = UsersEvents.objects.all() serializers.py class EventSerializer(serializers.ModelSerializer): class Meta: model = Event fields = \"__all__\" class UserSerializer(serializers.ModelSerializer): class Meta: model = User fields = \"__all__\" class UserOnEventSerializer(serializers.ModelSerializer): class Meta: model = UsersEvents fields = \"__all__\" class UserEventsSerializer(serializers.ModelSerializer): event_id = EventSerializer() class Meta: model = UsersEvents fields = (\"id\", \"event_id\")","title":"\u0424\u0430\u0439\u043b\u044b \u0441 \u043a\u043e\u0434\u043e\u043c (\u0431\u044d\u043a\u0435\u043d\u0434)"},{"location":"lab_4/#vuejs","text":"","title":"\u0424\u0430\u0439\u043b\u044b \u0441 \u043a\u043e\u0434\u043e\u043c Vue.js"},{"location":"lab_4/#router","text":"index.js import { createRouter, createWebHistory } from 'vue-router' const router = createRouter({ history: createWebHistory(import.meta.env.BASE_URL), routes: [ { path: '/registration', name: 'registration', component: () => import('../views/RegisterView.vue') }, { path: '/login', name: 'login', component: () => import('../views/LogInView.vue') }, { path: '/', name: 'main', component: () => import('../views/MainView.vue') }, { path: '/lk', name: 'lk', component: () => import('../views/LkView.vue') }, { path: '/lk/data', name: 'lk_data', component: () => import('../views/LkData.vue') }, { path: '/events/:id', name: 'eventInfo', props: true, component: () => import('../views/CardView.vue') } ] }) export default router","title":"router"},{"location":"lab_4/#api","text":"index.js import instance from \"../api/instance\" import UserAPI from \"../api/user\" import EventsAPI from \"../api/event\" import UsersEventsAPI from \"../api/users_events\" const userAPI = new UserAPI(instance) const eventsAPI = new EventsAPI(instance) const userEventsAPI = new UsersEventsAPI(instance) export { userAPI, eventsAPI, userEventsAPI } instance.js import axios from 'axios' const apiURL = 'http://127.0.0.1:8000' const token = localStorage.getItem('token') const instance = axios.create({ baseURL: apiURL, }) if (token){ instance.defaults.headers.common['Authorization'] = \"Token \" + token; } export default instance event.js - \u0441\u043e\u0431\u044b\u0442\u0438\u044f class EventsAPI { constructor(instance) { this.API = instance } fetchEvent = async (id) => { return this.API({ url: `/api/v1/events/${id}` }) } fetchEvents = async (id) => { return this.API({ url: `/api/v1/events` }) } fetchEventsByCategory = async (category) => { if (category === '') { return this.fetchEvents(); } return this.API({ url: `/api/v1/events?category=${category}` }) } fetchEventsByCategoryDistrictType = async (category, district, type_event) => { if ((category === '') && (district === '') && (type_event === '')) { return this.fetchEvents(); } return this.API({ url: `/api/v1/events?category=${category}&district=${district}&type_event=${type_event}` }) } } export default EventsAPI user.js - \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c class UserAPI { constructor(instance) { this.API = instance } login = async (data) => { return this.API({ method: 'POST', url: '/auth/token/login/', data, headers: { 'Content-Type': 'application/json' } }) } register = async (data) => { return this.API({ method: 'POST', url: '/auth/users/', data, headers: { 'Content-Type': 'application/json' } }) } logout = async (token) => { return this.API({ method: 'POST', url: '/auth/token/logout/', headers: { 'Authorization': `Token ${token}` } }) } currentUserInfo = async (token) => { return this.API({ url: '/auth/users/me/', headers: { 'Authorization': `Token ${token}` } }) } } export default UserAPI user_events.js - \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f class UsersEventsAPI { constructor(instance) { this.API = instance } fetchUsersEvents = async (token) => { return this.API({ url: '/api/v1/users_events', headers: { 'Authorization': `Token ${token}` } }) } addUsersEvents = async (data, token) => { return this.API({ method: 'POST', url: '/api/v1/users_events/add', data, headers: { 'Content-Type': 'application/json', 'Authorization': `Token ${token}` } }) } removeUsersEvent = async (id, token) => { return this.API({ method: 'DELETE', url: `/api/v1/users_events/${id}`, headers: { 'Content-Type': 'application/json', 'Authorization': `Token ${token}` } }) } } export default UsersEventsAPI","title":"api"},{"location":"lab_4/#stores","text":"index.py import { persist } from 'pinia-persists' import { createPinia } from 'pinia' const pinia = createPinia() pinia.use(persist()) export default pinia event.js - \u0441\u043e\u0431\u044b\u0442\u0438\u0435 import { defineStore } from 'pinia' import { eventsAPI } from '../api' const useEventsStore = defineStore('events', { state: () => ({ events: [], categoryFilter: '', districtFilter: '', typeFilter: '', event: {} }), actions: { async fetchEvents() { const response = await eventsAPI.fetchEvents() this.events = response.data return response }, async fetchEvent(id) { const response = await eventsAPI.fetchEvent(id) this.event = response.data return response }, async fetchEventsByCategoryDistrictType(category, district, type_event) { this.categoryFilter = category === this.categoryFilter ? '' : category; this.districtFilter = district === this.districtFilter ? '' : district; this.typeFilter = type_event === this.typeFilter ? '' : type_event; const response = await eventsAPI.fetchEventsByCategoryDistrictType(this.categoryFilter, this.districtFilter, this.typeFilter) this.events = response.data return response } } }) export default useEventsStore user.js - \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c import {defineStore} from 'pinia' import {userAPI} from '../api' const useUserStore = defineStore('user', { state: () => ({ user: {}, token: null, }), actions: { setToken(token) { this.token = token || null }, async login(data) { const response = await userAPI.login(data) this.token = response?.data?.auth_token || null if (this.token) { localStorage.setItem(\"token\", this.token) } return response }, async register(user) { const response = await userAPI.register(user) return response }, async logout() { let response = null if (this.token) { response = await userAPI.logout(this.token) if (response.status === 204) { window.localStorage.removeItem('token') this.token = ''; this.user = {}; } } return response }, async currentUserInfo() { let response = null if (this.token) { response = await userAPI.currentUserInfo(this.token) this.user = response.data?.username ? response.data : {} } return this.user }, }, }) export default useUserStore user_events.js - \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f import {userEventsAPI} from '../api' const useUserEventsStore = defineStore('user_events', { state: () => ({ userEvents: [], }), actions: { async fetchUsersEvents(token) { const response = await userEventsAPI.fetchUsersEvents(token) this.userEvents = response.data.user_events return response }, async addUsersEvents(event, token) { const response = await userEventsAPI.addUsersEvents( {event}, token) return response }, async removeUsersEvent(id, token) { const response = await userEventsAPI.removeUsersEvent(id, token) return response }, } }) export default useUserEventsStore","title":"stores"},{"location":"lab_4/#components","text":"Header.vue - \u0428\u0430\u043f\u043a\u0430 \u0441\u0430\u0439\u0442\u0430 <template> <nav class=\"navbar navbar-expand-lg navbar-dark\" style=\"background-color: #20c997;\"> <div class=\"container-fluid\"> <a class=\"navbar-brand\" href=\"#\"> <img src=\"./icons/logo.PNG\" alt=\"\u041b\u043e\u0433\u043e\" width=\"30\" height=\"24\" class=\"d-inline-block align-text-top\"> EventMap </a> <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"> <span class=\"navbar-toggler-icon\"></span> </button> <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\"> <div class=\"navbar-nav\"> <a class=\"nav-link active\" aria-current=\"page\" href=\"#\" @click=\"$router.push('/')\">\u041f\u043e\u0438\u0441\u043a \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439</a> </div> </div> <form v-if=\"!token\" class=\"justify-content-end\"> <a class=\"btn btn-light me-2\" href=\"#\" role=\"button\" id=\"enter\" @click=\"$router.push('/login/')\">\u0412\u0445\u043e\u0434</a> <a class=\"btn btn-sm btn-outline-light\" role=\"button\" id=\"registr\" href=\"#\" @click=\"$router.push('/registration/')\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</a> </form> <form v-else class=\"justify-content-end\"> <a class=\"btn btn-light me-2\" href=\"#\" role=\"button\" id=\"enterlk\" @click=\"$router.push('/lk/')\">\u041b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442</a> <a class=\"btn btn-sm btn-outline-light\" href=\"#\" role=\"button\" id=\"logout\" @click=\"Logout\">\u0412\u044b\u0445\u043e\u0434</a> </form> </div> </nav> </template> <script> import { mapState, mapActions } from 'pinia'; import useUserStore from '@/stores/user' export default { name: 'Header', computed: { ...mapState(useUserStore, ['token']) }, mounted() { this.setToken(window.localStorage.getItem('token')) }, methods: { ...mapActions(useUserStore, ['setToken', 'logout']), async Logout() { await this.logout() this.$router.push('/') } } } </script> Footer.vue - \u043f\u043e\u0434\u0432\u0430\u043b \u0441\u0430\u0439\u0442\u0430 <template> <footer class=\"d-flex flex-wrap justify-content-between align-items-center py-3 border-top navbar-expand-lg navbar-dark\" style=\"background-color: #20c997;\"> <p class=\"col-md-4 mb-0 text-white\">\u00a9 2022 Company, Inc</p> <a href=\"/\" class=\"col-md-4 d-flex align-items-center justify-content-center mb-3 mb-md-0 me-md-auto link-dark text-white text-decoration-none\"> <img src=\"./icons/logo.PNG\" alt=\"\u041b\u043e\u0433\u043e\" width=\"30\" height=\"24\" class=\"d-inline-block align-text-top \"> EventMap </a> <ul class=\"nav col-md-4 justify-content-end navbar-nav\"> <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2\">Home</a></li> <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2\">Features</a></li> <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2\">Pricing</a></li> <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2\">FAQs</a></li> <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2\">About</a></li> </ul> </footer> </template> <script> export default { name: \"Footer\" } </script> Filter.vue - \u0444\u0438\u043b\u044c\u0442\u0440\u044b \u0434\u043b\u044f \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b <template> <div class=\"container d-flex p-3 justify-content-center h2\">\u041d\u0430\u0439\u0434\u0438 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435</div> <div class=\"container d-grid gap-2 d-md-flex justify-content-center\"> <div class=\"row\"> <div class=\"form col-12 col-sm-6 col-lg-4 col-md-5 col-xl-3\"> <select class=\"form-select event-region\" aria-label=\".form-select-lg example\" id=\"district\" v-model=\"district\"> <option value=\"\" >\u0420\u0430\u0439\u043e\u043d</option> <option value=\"admiral\">\u0410\u0434\u043c\u0438\u0440\u0430\u043b\u0442\u0435\u0439\u0441\u043a\u0438\u0439</option> <option value=\"vasileostrov\">\u0412\u0430\u0441\u0438\u043b\u0435\u043e\u0441\u0442\u0440\u043e\u0432\u0441\u043a\u0438\u0439</option> <option value=\"vyborg\">\u0412\u044b\u0431\u043e\u0440\u0433\u0441\u043a\u0438\u0439</option> <option value=\"kalininsk\">\u041a\u0430\u043b\u0438\u043d\u0438\u043d\u0441\u043a\u0438\u0439</option> <option value=\"kirov\">\u041a\u0438\u0440\u043e\u0432\u0441\u043a\u0438\u0439</option> <option value=\"krasnogvard\">\u041a\u0440\u0430\u0441\u043d\u043e\u0433\u0432\u0430\u0440\u0434\u0435\u0439\u0441\u043a\u0438\u0439</option> <option value=\"krasnosel\">\u041a\u0440\u0430\u0441\u043d\u043e\u0441\u0435\u043b\u044c\u0441\u043a\u0438\u0439</option> <option value=\"kronshtad\">\u041a\u0440\u043e\u043d\u0448\u0442\u0430\u0434\u0441\u043a\u0438\u0439</option> <option value=\"moskov\">\u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u0438\u0439</option> <option value=\"nevsk\">\u041d\u0435\u0432\u0441\u043a\u0438\u0439</option> <option value=\"petrograd\">\u041f\u0435\u0442\u0440\u043e\u0433\u0440\u0430\u0434\u0441\u043a\u0438\u0439</option> <option value=\"center\">\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0439</option> </select> </div> <div class=\"form col-12 col-sm-6 col-lg-4 col-md-5 col-xl-3\"> <select class=\"form-select event-category\" aria-label=\".form-select-lg example\" id=\"category\" v-model=\"category\"> <option value=\"\">\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f</option> <option value=\"\u0422\u0435\u0430\u0442\u0440\u044b\" >\u0422\u0435\u0430\u0442\u0440\u044b</option> <option value=\"\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b\" >\u041a\u043e\u043d\u0446\u0435\u0440\u0442\u044b</option> <option value=\"\u0418\u0433\u0440\u044b\" >\u0418\u0433\u0440\u044b</option> <option value=\"\u0421\u043f\u043e\u0440\u0442 \u0438 \u0444\u0438\u0442\u043d\u0435\u0441\" >\u0421\u043f\u043e\u0440\u0442 \u0438 \u0444\u0438\u0442\u043d\u0435\u0441</option> <option value=\"\u0418\u0441\u0441\u043a\u0443\u0441\u0442\u0432\u043e \u0438 \u043a\u0443\u043b\u044c\u0442\u0443\u0440\u0430\" >\u0418\u0441\u0441\u043a\u0443\u0441\u0442\u0432\u043e \u0438 \u043a\u0443\u043b\u044c\u0442\u0443\u0440\u0430</option> <option value=\"\u041a\u0430\u0440\u044c\u0435\u0440\u0430 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435\" >\u041a\u0430\u0440\u044c\u0435\u0440\u0430 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435</option> </select> </div> <div class=\"form col-12 col-sm-6 col-lg-4 col-md-5 col-xl-3\"> <select class=\"form-select type-event\" aria-label=\".form-select-lg example\" id=\"type-event\" v-model=\"type_event\"> <option value=\"\">\u041b\u044e\u0431\u043e\u0439 \u0442\u0438\u043f</option> <option value=\"offline\">\u041e\u0447\u043d\u043e</option> <option value=\"online\">\u041e\u043d\u043b\u0430\u0439\u043d</option> </select> </div> <form class=\"d-flex justify-content-end col input-group mb-3 search-form\"> <button class=\"btn btn-outline-secondary search-btn\" type=\"button\" id=\"button-search\" @click=\"filterEvents\">\u041f\u043e\u0438\u0441\u043a</button> </form> </div> </div> </template> <script> import { mapActions, mapState } from 'pinia'; import useEventsStore from '@/stores/event' export default { name: \"Filter\", data() { return { category: '', district: '', type_event: '' } }, computed: { ...mapState(useEventsStore, ['events', 'categoryFilter', 'districtFilter', 'typeFilter']), }, methods: { ...mapActions(useEventsStore, ['fetchEventsByCategoryDistrictType']), filterEvents() { this.fetchEventsByCategoryDistrictType(this.category, this.district, this.type_event) } } } </script> LogInForm.vue - \u0444\u043e\u0440\u043c\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 <template> <main> <div class=\"container col-md-6 p-5\"> <form> <div class=\"mb-3\"> <label for=\"email\" class=\"form-label\">\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0439 e-mail:</label> <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" v-model=\"email\"> </div> <div class=\"mb-3\"> <label for=\"password\" class=\"form-label\">\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c:</label> <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" v-model=\"password\"> </div> <p v-if=\"error\" class=\"error text-danger\"> <strong>{{ error }}</strong> </p> <div class=\"p-4 d-flex justify-content-center\"> <button type=\"button\" class=\"btn btn-success mb-3\" @click=\"logIn\">\u0412\u043e\u0439\u0442\u0438</button> </div> </form> <div class=\"container d-flex\"> <p class=\"text-black\">\u0415\u0449\u0435 \u043d\u0435\u0442 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430?</p> <a href=\"#\" class=\"ms-2 text-success\" @click=\"$router.push('/registration/')\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0441\u044f</a> </div> </div> </main> </template> <script> import { mapActions, mapState } from 'pinia' import router from '@/router' import useUserStore from '@/stores/user' export default { name: \"LogIn\", data(){ return { email : \"\", password : \"\", error: \"\" } }, methods: { ...mapActions(useUserStore, ['login']), async logIn() { if (!this.email || !this.password) { this.error = '\u041e\u0448\u0438\u0431\u043a\u0430! \u0412\u0432\u0435\u0434\u0438\u0442\u0435 email \u0438 \u043f\u0430\u0440\u043e\u043b\u044c.' return } try { await this.login({ username: this.email, password: this.password }) } catch (e) { this.error = '\u041e\u0448\u0438\u0431\u043a\u0430! \u041d\u0435\u0432\u0435\u0440\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u043d email \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c.' return } this.$router.push('/lk') }, } } </script> RegisterForm.vue - \u0444\u043e\u0440\u043c\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 <template> <main> <div class=\"container col-md-6 p-5\"> <form @submit.prevent=\"register\"> <div class=\"mb-3\"> <label for=\"first_name\" class=\"form-label\">\u0418\u043c\u044f:</label> <input type=\"text\" class=\"form-control\" id=\"first_name\" name=\"first_name\" v-model=\"first_name\"> </div> <div class=\"mb-3\"> <label for=\"last_name\" class=\"form-label\">\u0424\u0430\u043c\u0438\u043b\u0438\u044f:</label> <input type=\"text\" class=\"form-control\" id=\"last_name\" name=\"last_name\" v-model=\"last_name\"> </div> <div class=\"mb-3\"> <label for=\"email\" class=\"form-label\">\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0439 e-mail:</label> <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" v-model=\"email\"> </div> <div class=\"mb-3\"> <label for=\"password\" class=\"form-label\">\u041f\u0440\u0438\u0434\u0443\u043c\u0430\u0439\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c:</label> <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" v-model=\"password\"> </div> <p v-if=\"error\" class=\"error text-danger\"> <strong>{{ error }}</strong> </p> <div class=\"p-4 d-flex justify-content-center\"> <button type=\"button\" class=\"btn btn-success mb-3\" @click=\"reg\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f</button> </div> </form> <div class=\"container d-flex\"> <p class=\"text-black\">\u0423\u0436\u0435 \u0435\u0441\u0442\u044c \u0430\u043a\u043a\u0430\u0443\u043d\u0442?</p> <a href=\"#\" class=\"ms-2 text-success\" @click=\"$router.push('/login/')\">\u0412\u043e\u0439\u0442\u0438</a> </div> </div> </main> </template> <script> import { mapActions, mapState } from 'pinia' import router from '@/router' import useUserStore from '@/stores/user' export default { name: 'RegisterForm', data() { return { first_name: \"\", last_name: \"\", email: \"\", username: \"\", password: \"\", error: \"\" }; }, methods: { ...mapActions(useUserStore, ['register', 'login']), async reg() { this.error = '' if (!this.email || !this.password) { this.error = '\u041e\u0448\u0438\u0431\u043a\u0430! \u0412\u0432\u0435\u0434\u0438\u0442\u0435 email \u0438 \u043f\u0430\u0440\u043e\u043b\u044c.' return } let result try { result = await this.register({ last_name: this.last_name, first_name: this.first_name, username: this.email, email: this.email, password: this.password }) } catch (e) { this.error = '\u041e\u0448\u0438\u0431\u043a\u0430! \u041d\u0435\u0432\u0435\u0440\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u043d email \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c.' return } if (result?.status === 201) { await this.login({ username: this.email, password: this.password }) this.$router.push('/lk') } } } } </script> EventCard - \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f <template> <div class=\"col-4\"> <div class=\"card h-100\" :event_id=\"id\"> <img :src=\"photo\" class=\"card-img-top img-fluid\" :alt=\"name\"> <div class=\"card-header d-flex justify-content-between align-content-center\"> <a class=\"btn btn-outline-secondary btn-sm\">{{ category }}</a> <p class=\"card-text\">{{ date }}</p> </div> <div class=\"card-body text-center d-flex flex-column justify-content-around p-3\"> <h5 class=\"card-title\">{{ name }}</h5> <div class=\"card-text d-flex justify-content-around \"> <p class=\"card-text\">{{ place }}</p> <p class=\"card-text text-success\">{{ price }}</p> </div> <div class=\"card-text d-flex justify-content-around \"> <RouterLink :to=\"`/events/${id}`\" class=\"text-black nav-link\"> <a href=\"#\" class=\"btn align-self-center\" style=\"background-color: #20c997;\" >\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435...</a> </RouterLink> </div> </div> </div> </div> </template> <script> export default { name: \"EventCard\", props: { id: {type: Number, required: true}, name: {type: String, required: true}, price: {type: String, required: true}, photo: {type: String, required: true}, category: {type: String, required: true}, district: {type: String, required: true}, place: {type: String, required: true}, type_event: {type: String, required: true}, date: {type: Date, required: true}, description: {type: String} }, } </script> ListEvents.vue - \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a \u0441\u043e\u0431\u044b\u0442\u0438\u044f <template> <div class=\"container p-3\"> <div v-for=\"(eventRow, eventRowIndex) in eventRows\" :key=\"`event-row-${eventRowIndex}`\" class=\"event-row row py-2\" > <EventCard v-for=\"(event) in eventRow\" :key=\"`event-${event.id}`\" :id=\"event.id\" :photo=\"event.photo\" :name=\"event.name\" :price=\"event.price\" :category=\"event.category\" :district=\"event.district\" :place=\"event.place\" :type_event=\"event.type_event\" :date=\"event.date\" /> </div> </div> </template> <script> import {mapActions, mapState} from 'pinia' import useEventsStore from \"@/stores/event\"; import EventCard from \"./EventCard.vue\"; export default { name: \"ListEvents\", components: {EventCard}, computed: { ...mapState(useEventsStore, ['events']), eventRows() { return this.getEventsRows(3) }, }, methods: { ...mapActions(useEventsStore, ['fetchEvents']), getEventsRows(rowSize) { const eventRows = []; for (let i = 0; i < this.events.length; i += rowSize) { const row = this.events.slice(i, i + rowSize); eventRows.push(row); } return eventRows; }, }, mounted() { this.fetchEvents() } } </script> EventInfo.vue - \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u043e\u0431\u044b\u0442\u0438\u0438 <template> <section class=\"container col-8 border justify-content-center bg-white py-3 min-vh-100\"> <div class=\"d-flex flex-row\"> <img :src=\"event.photo\" :alt=\"event.name\" class=\"img-fluid\" style=\"max-height: 300px; width: auto;\"> <div class=\"d-flex flex-column p-2 \"> <h2 class=\"text-center\">{{ event.name }}</h2> <dl class=\"row p-4\"> <dt class=\"col-sm-7\">\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f:</dt> <dd class=\"col-sm-5\">{{ event.date }}</dd> <dt class=\"col-sm-7\">\u041c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f:</dt> <dd class=\"col-sm-5\">{{ event.place }}</dd> <dt class=\"col-sm-7\">\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c:</dt> <dd class=\"col-sm-5\">{{ event.price }}</dd> </dl> </div> </div> <section class=\"py-3 px-1 mb-3\"> <div v-if=\"event.description\"> <h4 class=\"mb-2\">\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: </h4> <p>{{ event.description }}</p> </div> <div v-if=\"event.contact_number\"> <h4 class=\"mb-2\">\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b: </h4> <p>{{event.contact_number}} {{event.contact_name}}</p> </div> <form class=\"d-flex justify-content-center\"> <a href=\"#\" class=\"btn\" style=\"background-color: #20c997;\" @click=\"addUserEvent\">\u0417\u0430\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0437\u0430\u043d\u044f\u0442\u0438\u0435</a> </form> </section> <div class=\"d-flex justify-content-center\" v-if=\"event.map\"> <iframe :src=\"event.map\" width=\"700\" height=\"400\" frameborder=\"0\"></iframe> </div> </section> </template> <script> import {mapState, mapActions} from \"pinia\" import useEventsStore from \"@/stores/event\"; import useUserEventsStore from \"@/stores/users_events\"; import useUserStore from \"@/stores/user\"; export default { name: \"EventInfo\", computed: { ...mapState(useEventsStore, ['event', 'events']), ...mapState(useUserEventsStore, ['userEvents']), ...mapState(useUserStore, ['token']), }, mounted() { this.fetchEvent(this.$route.params.id) this.$watch( () => this.$route.params, (toParams) => { this.fetchEvent(toParams.id) } ) }, methods: { ...mapActions(useEventsStore, ['fetchEvent']), ...mapActions(useUserEventsStore, ['fetchUsersEvents', 'addUsersEvents']), addUserEvent() { this.addUsersEvents(this.event.id, this.token ).then(() => { this.fetchUsersEvents(this.token) }) }, } } </script> UserEventCard.vue - \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f (\u0432 \u041b\u041a), \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d <template> <div class=\"row col-10 g-0 mb-3 border\"> <div class=\"col-md-4 d-flex align-items-center\"> <img :src=\"event_id.photo\" class=\"img-fluid \" :alt=\"event_id.name\"> </div> <div class=\"col-md-8 d-flex flex-column justify-content-around\"> <div class=\"card-header d-flex justify-content-between p-4\"> <a class=\"btn btn-outline-secondary btn-sm\" role=\"button\">{{ event_id.category }}</a> <p class=\"card-text\">{{ event_id.date }}</p> </div> <div class=\"card-body text-center d-flex flex-column justify-content-around\" style=\"background-color: white\"> <h5 class=\"card-title\">{{ event_id.name }}</h5> <div class=\"card-text d-flex justify-content-around\"> <p class=\"card-location\">{{ event_id.place }}</p> <p class=\"card-cost\">{{ event_id.price }}</p> </div> <form class=\"flex-column justify-content-around\"> <RouterLink :to=\"`/events/${event_id.id}`\" class=\"text-black nav-link\"> <a href=\"#\" class=\"btn col-5 align-self-center mb-1\" style=\"background-color: #20c997;\" >\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435...</a> </RouterLink> <a href=\"#\" class=\"btn btn-danger col-5 align-self-center mb-1\" @click=\"removeEvent(id)\">\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c</a> </form> </div> </div> </div> </template> <script> import {mapActions, mapState} from \"pinia\"; import useUserEventsStore from \"@/stores/users_events\"; import useUserStore from \"@/stores/user\"; export default { name: \"UserEventCard\", props: { id: {type: Number, required: true}, event_id: { id: {type: Number, required: true}, name: {type: String, required: true}, price: {type: String, required: true}, photo: {type: String, required: true}, district: {type: String, required: true}, place: {type: String, required: true}, date: {type: String, required: true}, }, }, computed: { ...mapState(useUserEventsStore, ['userEvents']), ...mapState(useUserStore, ['token']), }, methods: { ...mapActions(useUserEventsStore, ['fetchUsersEvents', 'removeUsersEvent']), removeEvent(id) { this.removeUsersEvent(id, this.token ).then(() => { this.fetchUsersEvents(this.token) }) }, }, } </script> MyEvents.vue - \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u041b\u041a <template> <div class=\"col row-1 col-12 g-4 py-3\"> <UserEventCard v-for=\"(event) in userEvents\" :key=\"`user-event-${event.id}`\" :id=\"event.id\" :event_id=\"event.event_id\" /> </div> </template> <script> import {mapActions, mapState} from 'pinia' import useUserEventsStore from \"@/stores/users_events\"; import useUserStore from \"@/stores/user\"; import UserEventCard from \"./UserEventCard.vue\"; export default { name: \"MyEvents\", components: {UserEventCard}, computed: { ...mapState(useUserEventsStore, ['userEvents']), ...mapState(useUserStore, ['token']), }, methods: { ...mapActions(useUserEventsStore, ['fetchUsersEvents']), }, mounted() { this.fetchUsersEvents(this.token) } } </script>","title":"components"},{"location":"lab_4/#views","text":"MainView.vue - \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0435\u0439 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 <template> <Header/> <div class=\"min-vh-100\"> <Filter/> <ListEvents/> </div> <Footer/> </template> <script> import Header from \"../components/Header.vue\"; import Footer from \"../components/Footer.vue\"; import Filter from \"../components/Filter.vue\"; import EventCard from \"../components/EventCard.vue\"; import ListEvents from \"../components/ListEvents.vue\"; export default { name: \"MainView\", components: {ListEvents, EventCard, Filter, Footer, Header}, } </script> LogInView.vue - \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0432\u0445\u043e\u0434\u0430 <template> <Header/> <LogIn/> </template> <script> import LogIn from \"../components/LogInForm.vue\"; import Header from \"../components/Header.vue\"; import Footer from \"../components/Footer.vue\"; export default { name: \"LogInView\", components: {Footer, Header, LogIn}, } </script> RegisterView.vue - \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 <template> <Header/> <RegisterForm/> </template> <script> import RegisterForm from \"../components/RegisterForm.vue\"; import Header from \"../components/Header.vue\"; export default { name: \"RegisterView\", components: {Header, RegisterForm} } </script> LkView.vue - \u043b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442, \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f\u043c\u0438 <template> <Header/> <main class=\"p-5 container-fluid d-flex flex-row vh-100\"> <aside class=\"col-lg-3 d-flex flex-column justify-content-start\"> <img src=\"https://e7.pngegg.com/pngimages/398/54/png-clipart-silhouette-graphics-male-silhouette-animals-hand.png\" height=\"auto\" alt=\"\u0424\u043e\u0442\u043e \u043f\u0440\u043e\u0444\u0438\u043b\u044f\" class=\"img-fluid img-thumbnail\"> <ul class=\"list-group col-12\"> <li class=\"list-group-item\"> <a class=\"text-decoration-none link-dark\" href=\"#\" @click=\"$router.push('/lk/data')\">\u041c\u043e\u0438 \u0434\u0430\u043d\u043d\u044b\u0435</a> </li> <li class=\"list-group-item list-group-item-secondary\"> <a class=\"text-decoration-none link-dark active\" aria-current=\"true\" href=\"#\">\u041c\u043e\u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f</a> </li> <li class=\"list-group-item\"> <a class=\"text-danger text-decoration-none link-dark\" href=\"#\" @click=\"Logout\">\u0412\u044b\u0439\u0442\u0438</a> </li> </ul> </aside> <section class=\"col-lg-9 px-5\"> <h2>\u041c\u043e\u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f</h2> <MyEvents/> </section> </main> <Footer/> </template> <script> import Header from \"../components/Header.vue\"; import Footer from \"../components/Footer.vue\"; import MyEvents from \"../components/MyEvents.vue\"; import {mapActions, mapState} from \"pinia\"; import useUserStore from '@/stores/user' export default { name: \"LkView\", components: {MyEvents, Footer, Header}, computed: { ...mapState(useUserStore, ['token']) }, mounted() { this.setToken(window.localStorage.getItem('token')) }, methods: { ...mapActions(useUserStore, ['setToken', 'logout']), async Logout() { await this.logout() this.$router.push('/') } } } </script> LkData.vue - \u043b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442, \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f <template> <Header/> <main class=\"p-5 container-fluid d-flex flex-row vh-100\"> <aside class=\"col-lg-3 d-flex flex-column justify-content-start\"> <img src=\"https://e7.pngegg.com/pngimages/398/54/png-clipart-silhouette-graphics-male-silhouette-animals-hand.png\" height=\"auto\" alt=\"\u0424\u043e\u0442\u043e \u043f\u0440\u043e\u0444\u0438\u043b\u044f\" class=\"img-fluid img-thumbnail\"> <ul class=\"list-group col-12\"> <li class=\"list-group-item list-group-item-secondary\"> <a class=\"text-decoration-none link-dark active\" aria-current=\"true\" href=\"#\">\u041c\u043e\u0438 \u0434\u0430\u043d\u043d\u044b\u0435</a> </li> <li class=\"list-group-item\"> <a class=\"text-decoration-none link-dark \" href=\"#\" @click=\"$router.push('/lk/')\">\u041c\u043e\u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f</a> </li> <li class=\"list-group-item\"> <a class=\"text-danger text-decoration-none link-dark\" href=\"#\" @click=\"Logout\">\u0412\u044b\u0439\u0442\u0438</a> </li> </ul> </aside> <section class=\"col-lg-6 px-5\"> <h2>\u041c\u043e\u0438 \u0434\u0430\u043d\u043d\u044b\u0435</h2> <div class=\"row mt-4 \"> <ul class=\"list-group\"> <li class=\"list-group-item\">\u0418\u043c\u044f: {{ user.first_name }}</li> <li class=\"list-group-item\">\u0424\u0430\u043c\u0438\u043b\u0438\u044f: {{ user.last_name }}</li> <li class=\"list-group-item\">ID: {{ user.id }}</li> <li class=\"list-group-item\">Email: {{ user.email }}</li> <li class=\"list-group-item\">Username: {{ user.username }}</li> </ul> </div> </section> </main> <Footer/> </template> <script> import { mapState, mapActions } from 'pinia' import useUserStore from '@/stores/user' import Header from \"../components/Header.vue\"; import Footer from \"../components/Footer.vue\"; export default { name: \"LkData\", components: {Footer, Header}, computed: { ...mapState(useUserStore, ['user', 'token']), }, mounted() { this.currentUserInfo().then(result => { if (!result?.email) { this.$router.replace({ path:'/' }) } }) }, methods: { ...mapActions(useUserStore, ['currentUserInfo', 'logout']), async Logout() { await this.logout() this.$router.push('/') } } } </script> CardView.vue - \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0441\u043e\u0431\u044b\u0442\u0438\u0438 <template> <Header/> <EventInfo/> <Footer/> </template> <script> import Header from \"../components/Header.vue\"; import Footer from \"../components/Footer.vue\"; import EventInfo from \"../components/EventInfo.vue\"; export default { name: \"CardView\", components: {EventInfo, Footer, Header} } </script>","title":"views"},{"location":"pr_3_1/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3.1 models.py from django.db import models class Car_owner(models.Model): last_name = models.CharField(max_length = 30, null = False) first_name = models.CharField(max_length = 30, null = False) birth_day = models.DateField(null = True) class Car(models.Model): state_number = models.CharField(max_length = 15, null = False) mark_car = models.CharField(max_length = 20, null = False) model_car = models.CharField(max_length = 20, null = False) color = models.CharField(max_length = 30, null = True) class Ownership(models.Model): id_owner = models.ForeignKey(Car_owner, on_delete = models.CASCADE, related_name='owner') id_car = models.ForeignKey(Car, on_delete = models.CASCADE, related_name='car') start_date = models.DateField() end_date = models.DateField(null = True) class Driver_license(models.Model): id_owner = models.ForeignKey(Car_owner, on_delete = models.CASCADE, related_name='car_owner') license_number = models.CharField(max_length = 10, null = False) category = models.CharField(max_length = 10, null = False) date_of_license= models.DateField() \u0417\u0430\u0434\u0430\u043d\u0438\u0435 1 \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0439 \u0421\u0432\u044f\u0437\u044c \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0441 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u043c\u0438 \u0417\u0430\u0434\u0430\u043d\u0438\u0435 2 \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c) \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435) \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430) \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442) \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435) \u0417\u0430\u0434\u0430\u043d\u0438\u0435 3 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b: \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435 \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f","title":"\u041f\u0420 3.1"},{"location":"pr_3_1/#31","text":"models.py from django.db import models class Car_owner(models.Model): last_name = models.CharField(max_length = 30, null = False) first_name = models.CharField(max_length = 30, null = False) birth_day = models.DateField(null = True) class Car(models.Model): state_number = models.CharField(max_length = 15, null = False) mark_car = models.CharField(max_length = 20, null = False) model_car = models.CharField(max_length = 20, null = False) color = models.CharField(max_length = 30, null = True) class Ownership(models.Model): id_owner = models.ForeignKey(Car_owner, on_delete = models.CASCADE, related_name='owner') id_car = models.ForeignKey(Car, on_delete = models.CASCADE, related_name='car') start_date = models.DateField() end_date = models.DateField(null = True) class Driver_license(models.Model): id_owner = models.ForeignKey(Car_owner, on_delete = models.CASCADE, related_name='car_owner') license_number = models.CharField(max_length = 10, null = False) category = models.CharField(max_length = 10, null = False) date_of_license= models.DateField()","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3.1"},{"location":"pr_3_1/#1","text":"\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0439 \u0421\u0432\u044f\u0437\u044c \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0441 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u043c\u0438","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"pr_3_1/#2","text":"\u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c) \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435) \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430) \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442) \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435)","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"pr_3_1/#3","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b: \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435 \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3"}]}